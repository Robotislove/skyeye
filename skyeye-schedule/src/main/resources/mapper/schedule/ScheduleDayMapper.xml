<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.eve.dao.ScheduleDayDao">
	
	<insert id="insertScheduleDayMation" parameterType="java.util.Map">
	     INSERT INTO schedule_day
	     (id, title, remarks, all_day, start_time, end_time, remind_type, remind_time, type, type_name, state, import,
	      create_id, create_time, is_remind, object_id, object_type)
	     VALUES
	     (#{id}, #{scheduleTitle}, #{remarks}, #{allDay}, #{scheduleStartTime}, #{scheduleEndTime}, #{remindType}, #{remindTime}, #{type}, #{typeName}, '0', #{import},
	      #{createId}, #{createTime}, '1', #{objectId}, #{objectType})
	</insert>
	
	<select id="queryScheduleDayMationByUserId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.title,
			a.start_time `start`,
			a.end_time `end`,
			CASE a.all_day WHEN '0' THEN false WHEN '1' THEN true ELSE true END allDay,
			CASE a.type WHEN '1' THEN '#63B8FF' WHEN '2' THEN '#CD69C9' WHEN '3' THEN '#54FF9F'
				WHEN '4' THEN '#FF0000' WHEN '5' THEN '#ADADAD' ELSE '' END backgroundColor,
			'1' showBg,
			CASE WHEN DATE_FORMAT(a.start_time, '%Y-%m-%d') > DATE_FORMAT(NOW(), '%Y-%m-%d') THEN true ELSE false END editable, #是否可编辑
			a.type
		FROM
			schedule_day a
		WHERE a.create_id = #{userId}
		AND a.type != '3'
		AND (
		<foreach collection="list" item="item" index="index" >
			DATE_FORMAT(a.start_time, '%Y-%m') = #{item} OR DATE_FORMAT(a.end_time, '%Y-%m') = #{item} OR
		</foreach>
		1 = 0)
	</select>
	
	<select id="queryScheduleDayMationTodayByUserId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.title,
			DATE_FORMAT(a.start_time, '%H:%i') `start`,
			DATE_FORMAT(a.end_time, '%H:%i') `end`,
			a.`type`,
			CASE a.type WHEN '1' THEN '#63B8FF' WHEN '2' THEN '#CD69C9' WHEN '3' THEN '#54FF9F'
				WHEN '4' THEN '#FF0000' WHEN '5' THEN '#ADADAD' ELSE '' END backgroundColor,
			CASE a.import WHEN '1' THEN '普通' WHEN '2' THEN '重要' ELSE '普通' END scheduleImport
		FROM
			schedule_day a
		WHERE
			a.create_id = #{userId}
		AND a.`type` != '3'
		AND DATE_FORMAT(now(), '%Y-%m-%d') >= DATE_FORMAT(a.start_time, '%Y-%m-%d')
		AND DATE_FORMAT(a.end_time, '%Y-%m-%d') >= DATE_FORMAT(now(), '%Y-%m-%d')
		ORDER BY DATE_FORMAT(a.start_time, '%H:%i') ASC
	</select>
	
	<select id="queryScheduleDayMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.remind_type remindType,
			a.title scheduleTitle
		FROM
			schedule_day a
		WHERE
			a.id = #{id}
	</select>
	
	<update id="editScheduleDayMationById" parameterType="java.util.Map">
		UPDATE schedule_day
		<set>
			start_time = #{scheduleStartTime},
			end_time = #{scheduleEndTime},
			remind_time = #{remindTime},
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryScheduleDayDetailsMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.remind_type remindType,
			a.title scheduleTitle,
			CONVERT(a.start_time, char) scheduleStartTime,
			CONVERT(a.end_time, char) scheduleEndTime,
			CONVERT(a.remind_time, char) scheduleRemindTime,
			CONVERT(a.create_time, char) scheduleCreateTime,
			a.type_name scheduleTypeName,
			CASE a.`import` WHEN '1' THEN '普通' WHEN '2' THEN '重要' ELSE '普通' END scheduleImport,
			CASE a.`state` WHEN '0' THEN '新建行程' WHEN '1' THEN '已完成' ELSE '新建行程' END scheduleState,
			a.remarks scheduleRemarks
		FROM
			schedule_day a
		WHERE
			a.id = #{id}
	</select>
	
	<delete id="deleteScheduleDayMationById" parameterType="java.util.Map">
		DELETE
		FROM
			schedule_day
		WHERE
			id = #{id}
	</delete>
	
	<select id="queryHolidayScheduleList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.title,
			a.start_time startTime,
			DATE_FORMAT(a.start_time, '%Y年%m月%d日') `start`,
			DATE_FORMAT(a.end_time, '%Y年%m月%d日') `end`,
			CASE a.remind_type WHEN '0' THEN '暂无设置提醒时间' ELSE CONVERT(a.remind_time, char) END scheduleRemindTime,
			a.remind_type remindType,
			CONVERT(a.create_time, char) scheduleCreateTime,
			a.`state`,
			b.user_name userName
		FROM
			schedule_day a
			LEFT JOIN sys_eve_user_staff b ON a.create_id = b.user_id
		WHERE a.type = '3'
			<if test="scheduleTitle != '' and scheduleTitle != null">
				AND a.title LIKE '%${scheduleTitle}%'
			</if>
		ORDER BY a.start_time DESC
	</select>
	
	<insert id="exploreScheduleTemplate" parameterType="java.util.Map">
	     insert into schedule_day
	     (id, title, remarks, all_day, start_time, end_time, remind_type, remind_time, type, type_name, state, import, create_id, create_time, is_remind)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.title}, #{item.remarks}, #{item.allDay}, #{item.startTime}, #{item.endTime}, #{item.remindType}, #{item.remindTime}, #{item.type}, #{item.typeName}, #{item.state}, #{item.import}, #{item.createId}, #{item.createTime}, #{item.isRemind})  
		</foreach>  
	</insert>
	
	<delete id="deleteHolidayScheduleById" parameterType="java.util.Map">
		DELETE
		FROM
			schedule_day
		WHERE
			id = #{id}
		AND `type` = '3'
	</delete>
	
	<select id="queryHolidayScheduleByThisYear" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id
		FROM
			schedule_day a
		WHERE a.`type` = '3'
		AND YEAR(a.start_time) = YEAR(NOW())
	</select>
	
	<delete id="deleteHolidayScheduleByThisYear" parameterType="java.util.Map">
		DELETE
		FROM
			schedule_day
		WHERE
			YEAR(start_time) = YEAR(NOW())
		AND `type` = '3'
	</delete>
	
	<update id="addHolidayScheduleRemind" parameterType="java.util.Map">
		UPDATE schedule_day
		<set>
			remind_type = #{remindType},
			is_remind = '1',
			remind_time = #{remindTime},
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryHolidayScheduleDayMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.remind_type remindType,
			a.title scheduleTitle,
			a.start_time scheduleStartTime,
			a.end_time scheduleEndTime
		FROM
			schedule_day a
		WHERE
			a.id = #{id}
	</select>
	
	<update id="deleteHolidayScheduleRemind" parameterType="java.util.Map">
		UPDATE schedule_day
		<set>
			remind_type = '0',
			is_remind = '0',
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryScheduleByIdToEdit" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.title scheduleTitle,
			CONVERT(DATE (a.start_time), char) scheduleStartTime,
			CONVERT(DATE (a.end_time), char) scheduleEndTime
		FROM
			schedule_day a
		WHERE
			a.id = #{id}
	</select>
	
	<update id="editScheduleById" parameterType="java.util.Map">
		UPDATE schedule_day
		<set>
			title = #{title},
			start_time = #{startTime},
			end_time = #{endTime}
		</set>
		WHERE id = #{id}
	</update>
	
	<insert id="addSchedule" parameterType="java.util.Map">
		insert into schedule_day
		(id, title, all_day, start_time, end_time, remind_type, type, type_name, state, import, create_id, create_time, is_remind)
		values
		(#{id}, #{title}, #{allDay}, #{startTime}, #{endTime}, #{remindType}, #{type}, #{typeName}, #{state}, #{import}, #{createId}, #{createTime}, #{isRemind})  
	</insert>
	
	<select id="queryIsnullThistime" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
			a.id
		FROM 
			schedule_day a,
			schedule_day b
		WHERE a.type = 3 
		AND b.type = 3
		AND ((#{startTime} >= a.start_time AND a.end_time >= #{startTime}) OR (#{endTime} >= b.start_time AND b.end_time >= #{endTime}))
		ORDER BY a.start_time DESC, b.start_time DESC
		LIMIT 1
	</select>
	
	<select id="queryHolidayScheduleListBySys" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.title,
			DATE_FORMAT(a.start_time, '%Y-%m-%d') `start`,
			DATE_FORMAT(a.end_time, '%Y-%m-%d')  `end`,
			true allDay,
			'#54FF9F' backgroundColor,
			'2' showBg,
			false editable#是否可编辑
		FROM
			schedule_day a
		WHERE a.type = '3'
	</select>

    <delete id="deleteScheduleDayMationByPlanId">
		DELETE
		FROM
			schedule_day
		WHERE
			object_id = #{objectId}
	</delete>

	<select id="queryMyScheduleList" resultType="java.util.Map">
		SELECT
			a.id,
			a.title,
			CONVERT(a.start_time, char) scheduleStartTime,
			CONVERT(a.end_time, char) scheduleEndTime,
			CONVERT(a.remind_time, char) scheduleRemindTime,
			CASE a.`import` WHEN '1' THEN '普通' WHEN '2' THEN '重要' ELSE '普通' END scheduleImport,
			CASE a.`state` WHEN '0' THEN '新建行程' WHEN '1' THEN '已完成' ELSE '新建行程' END scheduleState,
			CASE a.all_day WHEN '0' THEN '否' WHEN '1' THEN '是' ELSE '是' END allDay,
			CASE a.type WHEN '1' THEN '个人' WHEN '2' THEN '工作' WHEN '3' THEN '节假日'
						WHEN '4' THEN '生日' WHEN '5' THEN '自定义' ELSE '' END typeName,
			CONVERT(a.create_time, char) createTime
		FROM
			schedule_day a
		WHERE a.create_id = #{userId}
		AND a.type != '3'
		ORDER BY a.create_time DESC
	</select>

</mapper>