<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.eve.dao.CheckWorkReasonDao">

	<select id="queryCheckWorkReasonList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.appeal_name appealName,
			b.user_name createName,
			CONVERT(a.create_time, char) createTime,
			a.state,
			a.order_by orderBy
		FROM
			check_work_reason a,		
			sys_eve_user_staff b
		WHERE 
			a.create_id = b.user_id
			<if test="appealName != '' and appealName != null">
				AND a.appeal_name LIKE '%${appealName}%'
			</if>
			AND a.state != 3
			ORDER BY a.order_by ASC
	</select>
	
	<select id="queryCheckWorkReasonByName" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.appeal_name appealName
		FROM
			check_work_reason a
		WHERE a.appeal_name = #{appealName}
	</select>
	
	<select id="queryCheckWorkReasonBySimpleLevel" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			COUNT(*) simpleNum
		FROM
			check_work_reason 
	</select>
	
	<insert id="insertCheckWorkReasonMation" parameterType="java.util.Map">
	    INSERT into check_work_reason 
	    (id, appeal_name, order_by, state, create_id, create_time)
	    VALUES(#{id}, #{appealName}, #{orderBy}, #{state}, #{createId}, #{createTime})
	</insert>
	
	<update id="deleteCheckWorkReasonById" parameterType="java.util.Map">
		UPDATE check_work_reason
		<set>
			state = 3
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryCheckWorkReasonStateById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.state
		FROM
			check_work_reason a	
		WHERE 
			a.id = #{id}
	</select>
	
	<update id="updateUpCheckWorkReasonById" parameterType="java.util.Map">
		UPDATE check_work_reason
		<set>
			state = 1
		</set>
		WHERE id = #{id}
	</update>
	
	<update id="updateDownCheckWorkReasonById" parameterType="java.util.Map">
		UPDATE check_work_reason
		<set>
			state = 2
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="selectCheckWorkReasonById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.appeal_name appealName
		FROM
			check_work_reason a	
		WHERE 
			a.id = #{id}
	</select>
	
	<update id="editCheckWorkReasonMationById" parameterType="java.util.Map">
		UPDATE check_work_reason
		<set>
			appeal_name = #{appealName}
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryCheckWorkReasonUpMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.order_by thisOrderBy,
			b.id,
			b.order_by prevOrderBy
		FROM
			check_work_reason a,
			check_work_reason b
		WHERE
			a.id = #{id}
		AND a.order_by > b.order_by
		AND b.state != 3
		ORDER BY
			b.order_by DESC
		LIMIT 1
	</select>
	
	<update id="editCheckWorkReasonMationOrderNumUpById" parameterType="java.util.Map">
		UPDATE check_work_reason
		<set>
			order_by = #{upOrderBy},
		</set>
		WHERE id = #{id}
	</update>

	<select id="queryCheckWorkReasonDownMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.order_by thisOrderBy,
			b.id,
			b.order_by prevOrderBy
		FROM
			check_work_reason a,
			check_work_reason b
		WHERE
			a.id = #{id}
		AND b.order_by > a.order_by
		AND b.state != 3
		ORDER BY
			b.order_by ASC
		LIMIT 1
	</select>

	<select id="queryCheckWorkReasonUpStateList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.appeal_name name
		FROM
			check_work_reason a
		WHERE 
			a.state = 1
			ORDER BY a.order_by ASC
	</select>
	
</mapper>