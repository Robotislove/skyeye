<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.dao.MaterialDao">

    <select id="queryMaterialList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
			a.id,
			a.`name`,
			a.model,
			b.`name` categoryName,
			a.enabled,
			CASE a.`type` WHEN '1' THEN '自产' WHEN '2' THEN '外购' ELSE '参数错误' END typeName,
			CONVERT (a.create_time, CHAR) createTime
		FROM
			erp_material a
			LEFT JOIN erp_material_category b ON a.category_id = b.id
		WHERE a.delete_flag = '0'
        <if test="categoryId != '' and categoryId != null">
            AND a.category_id = #{categoryId}
        </if>
        <if test="materialName != '' and materialName != null">
            AND a.`name` LIKE '%${materialName}%'
        </if>
        <if test="enabled != '' and enabled != null">
            AND a.enabled = #{enabled}
        </if>
        <if test="typeNum != '' and typeNum != null">
            AND a.`type` = #{typeNum}
        </if>
        <if test="model != '' and model != null">
            AND a.model LIKE '%${model}%'
        </if>
        ORDER BY a.create_time DESC
    </select>
    
    <select id="queryMaterialUnitByUnitId" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id,
			a.`name`,
			a.base_unit baseUnit
		FROM
			erp_unit a
		WHERE
			a.id = #{unitId}
		AND a.delete_flag = '0'
    </select>
    
    <select id="queryMaterialByNameAndModel" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id
		FROM
			erp_material a
		WHERE
			a.delete_flag = '0'
		AND a.`name` = #{materialName}
		AND a.model = #{model}
    </select>
    
    <insert id="insertMaterialNorms" parameterType="java.util.Map">
	     insert into erp_material_norms 
	     (id, meterial_id, safety_tock, retail_price, low_price, estimate_purchase_price, sale_price, delete_flag, create_time)
	     values(#{id}, #{materialId}, #{safetyTock}, #{retailPrice}, #{lowPrice}, #{estimatePurchasePrice}, #{salePrice}, #{deleteFlag}, #{createTime})
	</insert>
	
	<insert id="insertMaterialNormsList" parameterType="java.util.Map">
	     insert into erp_material_norms
	     (id, meterial_id, unit_id, safety_tock, retail_price, low_price, estimate_purchase_price, sale_price, delete_flag, create_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.materialId}, #{item.unitId}, #{item.safetyTock}, #{item.retailPrice}, #{item.lowPrice}, #{item.estimatePurchasePrice}, #{item.salePrice}, #{item.deleteFlag}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<insert id="insertMaterialMation" parameterType="java.util.Map">
	     insert into erp_material 
	     (id, category_id, `name`, model, remark, unit, unit_name, unit_group_id, first_out_unit, first_in_unit, 
	     enabled, delete_flag, create_time, enclosure_info, `type`)
	     values(#{id}, #{categoryId}, #{materialName}, #{model}, #{remark}, #{unit}, #{unitName}, #{unitGroupId}, #{firstOutUnit}, #{firstInUnit}, 
	     #{enabled}, #{deleteFlag}, #{createTime}, #{enclosureInfo}, #{type})
	</insert>
	
	<!-- 获取商品状态  0-禁用  1-启用 -->
	<select id="queryMaterialEnabledById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.enabled
		FROM
			erp_material a
		WHERE
			a.id = #{id}
		AND a.delete_flag = '0'
	</select>
	
	<update id="editMaterialEnabledToDisablesById" parameterType="java.util.Map">
		UPDATE erp_material
		<set>
			enabled = '0'
		</set>
		WHERE id = #{id}
	</update>
	
	<update id="editMaterialEnabledToEnablesById" parameterType="java.util.Map">
		UPDATE erp_material
		<set>
			enabled = '1'
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryMaterialDeleteFlagByIdAndUserId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.delete_flag deleteFlag
		FROM
			erp_material a
		WHERE
			a.id = #{id}
		AND a.delete_flag = '0'
	</select>
	
	<!-- 删除产品信息 -->
	<update id="deleteMaterialMationById" parameterType="java.util.Map">
		UPDATE erp_material
		<set>
			delete_flag = '1'
		</set>
		WHERE id = #{id}
		AND delete_flag = '0'
	</update>
	
	<!-- 删除产品规格信息 -->
	<update id="deleteMaterialNormsMationById" parameterType="java.util.Map">
		UPDATE erp_material_norms
		<set>
			delete_flag = '1'
		</set>
		WHERE meterial_id = #{id}
		AND delete_flag = '0'
	</update>
	
	<!-- 获取产品详情信息 -->
	<select id="queryMaterialMationDetailsById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.`name` materialName,
			b.`name` categoryName,
			a.model,
			a.remark,
			a.unit,
			CASE a.unit WHEN '1' THEN '非多单位' WHEN '2' THEN '多单位' ELSE '' END unitType,
			a.unit_name unitName,
			CONCAT(g.`name`, '-----', CONCAT(GROUP_CONCAT(f.`name` ORDER BY f.number ASC), '(', GROUP_CONCAT(f.number ORDER BY f.number ASC separator ':') ,')')) unitGroupName,
			d.`name` firstInUnit,
			e.`name` firstOutUnit,
			CASE a.enabled WHEN '0' THEN '禁用' WHEN '1' THEN '启用' ELSE '' END enabled,
			CONVERT (a.create_time, CHAR) createTime,
			CASE a.`type` WHEN '1' THEN '自产' WHEN '2' THEN '外购' ELSE '' END typeName,
			IFNULL(a.enclosure_info, '') enclosureInfo
		FROM
			erp_material a
			LEFT JOIN erp_material_category b ON a.category_id = b.id
			LEFT JOIN erp_unit d ON a.first_in_unit = d.id
			LEFT JOIN erp_unit e ON a.first_out_unit = e.id
			LEFT JOIN erp_unit f ON f.group_id = a.unit_group_id
			LEFT JOIN erp_unit_group g ON g.id = a.unit_group_id
		WHERE
			a.id = #{id}
		AND a.delete_flag = '0'
	</select>
	
	<select id="queryMaterialNormsMationDetailsById" resultType="java.util.Map">
		SELECT
			a.id,
			b.`name` unitName,
			CASE b.base_unit WHEN '1' THEN '基础单位' WHEN '2' THEN '副单位' ELSE '' END baseUnit,
			IFNULL(a.safety_tock, 0) safetyTock,
			FORMAT(a.retail_price, 2) retailPrice,
			FORMAT(a.low_price, 2) lowPrice,
			FORMAT(a.estimate_purchase_price, 2) estimatePurchasePrice,
			FORMAT(a.sale_price, 2) salePrice,
			IFNULL((SELECT SUM(it.initial_tock) FROM erp_material_norms_tock it WHERE a.id = it.norms_id <if test="depotId != '' and depotId != null">AND it.depot_id = #{depotId}</if>), 0) + 
				IFNULL((SELECT SUM(sn.stock_num) FROM erp_material_depot_stock sn WHERE a.id = sn.norms_id <if test="depotId != '' and depotId != null">AND sn.depot_id = #{depotId}</if>), 0) allTock
		FROM
			erp_material_norms a
			LEFT JOIN erp_unit b ON a.unit_id = b.id
		WHERE
			a.meterial_id = #{materialId}
		AND a.delete_flag = '0'
		GROUP BY a.id
		ORDER BY b.number ASC
	</select>
	
	<select id="queryMaterialMationToEditById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.`name` materialName,
			a.category_id categoryId,
			a.model,
			a.remark,
			a.unit,
			a.unit_name unitName,
			a.unit_group_id unitGroupId,
			a.first_in_unit firstInUnit,
			a.first_out_unit firstOutUnit,
			IFNULL(a.enclosure_info, '') enclosureInfo,
			a.`type`
		FROM
			erp_material a
		WHERE
			a.id = #{id}
		AND a.delete_flag = '0'
	</select>
	
	<select id="queryMaterialNormsMationToEditById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.unit_id unitId,
			b.`name` unitName,
			CASE b.base_unit WHEN '1' THEN '基础单位' WHEN '2' THEN '副单位' ELSE '' END baseUnit,
			a.safety_tock safetyTock,
			CONVERT(a.retail_price, decimal(24, 2)) retailPrice,
			CONVERT(a.low_price, decimal(24, 2)) lowPrice,
			CONVERT(a.estimate_purchase_price, decimal(24, 2)) estimatePurchasePrice,
			CONVERT(a.sale_price, decimal(24, 2)) salePrice
		FROM
			erp_material_norms a
			LEFT JOIN erp_unit b ON a.unit_id = b.id
		WHERE
			a.meterial_id = #{id}
		AND a.delete_flag = '0'
		ORDER BY b.number ASC
	</select>
	
	<select id="queryMaterialByNameAndModelAndId" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id
		FROM
			erp_material a
		WHERE
			a.delete_flag = '0'
		AND a.`name` = #{materialName}
		AND a.model = #{model}
		AND a.id != #{id}
    </select>
    
    <update id="editMaterialMationById" parameterType="java.util.Map">
		UPDATE erp_material
		<set>
			<if test="materialName != '' and materialName != null">
	            `name` = #{materialName},
	        </if>
			<if test="categoryId != '' and categoryId != null">
	            category_id = #{categoryId},
	        </if>
			<if test="model != '' and model != null">
	            model = #{model},
	        </if>
	        remark = #{remark},
	        <if test="unit != '' and unit != null">
	            unit = #{unit},
	        </if>
            unit_name = #{unitName},
            unit_group_id = #{unitGroupId},
            first_in_unit = #{firstInUnit},
            first_out_unit = #{firstOutUnit},
            enclosure_info = #{enclosureInfo},
            `type` = #{type},
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryMaterialById" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id,
			a.unit,
			a.unit_name unitName,
			a.unit_group_id unitGroupId
		FROM
			erp_material a
		WHERE
			a.id = #{id}
		AND a.delete_flag = '0'
    </select>
    
    <select id="queryMaterialNormsById" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id,
			a.unit_id unitId
		FROM
			erp_material_norms a
		WHERE
			a.meterial_id = #{id}
		AND a.delete_flag = '0'
    </select>
    
    <update id="editMaterialNormsById" parameterType="java.util.Map">
		UPDATE erp_material_norms
		<set>
			<if test="safetyTock != '' and safetyTock != null">
	            safety_tock = #{safetyTock},
	        </if>
			<if test="retailPrice != '' and retailPrice != null">
	            retail_price = #{retailPrice},
	        </if>
	        <if test="lowPrice != '' and lowPrice != null">
	            low_price = #{lowPrice},
	        </if>
			<if test="estimatePurchasePrice != '' and estimatePurchasePrice != null">
	            estimate_purchase_price = #{estimatePurchasePrice},
	        </if>
	        <if test="salePrice != '' and salePrice != null">
	            sale_price = #{salePrice},
	        </if>
	        unit_id = #{unitId}
		</set>
		WHERE id = #{id}
		AND delete_flag = '0'
	</update>
	
	<select id="queryMaterialListToTable" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id productId,
			a.`name` productName,
			a.model productModel,
			a.enabled,
			a.unit,
			a.unit_name unitName,
			a.`type` typeId,
			CASE a.`type` WHEN '1' THEN '自产' WHEN '2' THEN '外购' ELSE '参数错误' END typeName,
			b.`name` categoryName,
			CONVERT (a.create_time, CHAR) createTime
		FROM
			erp_material a
			LEFT JOIN erp_material_category b ON a.category_id = b.id
		WHERE a.delete_flag = '0'
		AND a.enabled = '1'
        <if test="categoryId != '' and categoryId != null">
            AND a.category_id = #{categoryId}
        </if>
        <if test="materialName != '' and materialName != null">
            AND a.`name` LIKE '%${materialName}%'
        </if>
        <if test="typeNum != '' and typeNum != null">
            AND a.`type` = #{typeNum}
        </if>
        <if test="model != '' and model != null">
            AND a.model LIKE '%${model}%'
        </if>
        ORDER BY a.create_time DESC
    </select>
    
    <select id="queryMaterialUnitByIdToSelect" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			a.id,
			b.`name`,
			CONVERT(a.estimate_purchase_price, decimal(24, 2)) estimatePurchasePrice,
			CONVERT(a.retail_price, decimal(24, 2)) retailPrice,
			CONVERT(a.sale_price, decimal(24, 2)) salePrice,
			a.unit_id unitId
		FROM
			erp_material_norms a
			LEFT JOIN erp_unit b ON a.unit_id = b.id
		WHERE
			a.meterial_id = #{materialId}
		AND a.delete_flag = '0'
		ORDER BY b.number ASC
    </select>
    
    <select id="queryMaterialTockByNormsId" resultType="java.util.Map">
		SELECT
			IFNULL(SUM(k.tock), 0) currentTock
		FROM
			(
				SELECT
					SUM(IFNULL(a.initial_tock, 0)) tock
				FROM
					erp_material_norms_tock a
				WHERE
					a.norms_id = #{normsId}
				<if test="depotId != '' and depotId != null">
					AND a.depot_id = #{depotId}
				</if>
			UNION ALL
				SELECT
					SUM(IFNULL(a.stock_num, 0)) tock
				FROM
					erp_material_depot_stock a
				WHERE
					a.norms_id = #{normsId}
				<if test="depotId != '' and depotId != null">
					AND a.depot_id = #{depotId}
				</if>
			) k
    </select>
    
    <select id="queryMaterialDepotItemByNormsId" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			b.id,
			b.default_number defaultNumber,
			a.oper_number operNumber,
			b.type,
			FORMAT(a.unit_price, 2) unitPrice,
			b.link_number linkNumber,
			b.status,
			b.sub_type subType,
			FORMAT(IFNULL(a.tax_last_money, a.all_price), 2) taxLastMoney,
			CONVERT (b.oper_time, CHAR) operTime,
			a.m_type mType,
			CASE b.sub_type WHEN 1 THEN '采购入库' WHEN 2 THEN '销售退货' WHEN 3 THEN '零售退货' WHEN 4 THEN '其他入库' WHEN 5 THEN '销售出库' 
							WHEN 6 THEN '采购退货' WHEN 7 THEN '调拨' WHEN 8 THEN '零售出库' WHEN 9 THEN '其他出库' WHEN 12 THEN '拆分单'
							WHEN 13 THEN '组装单' WHEN 15 THEN '验收入库' ELSE '' END subTypeName,
			IF(IFNULL(c.supplier, '') = '', d.`name`, c.supplier) supplierName
		FROM
			erp_depotitem a,
			erp_depothead b
			LEFT JOIN erp_supplier c ON b.organ_id = c.id
			LEFT JOIN crm_customer d ON b.organ_id = d.id
		WHERE
			a.norms_id = #{mUnitId}
		AND a.delete_flag = '0'
		AND b.sub_type NOT IN(10, 11, 14) <!-- 采购单，销售单，调拨单不计入列表查询 -->
		AND a.header_id = b.id 
		AND b.delete_flag = '0'
		ORDER BY b.oper_time DESC, a.id
    </select>
    
    <insert id="insertNormsStockMation" parameterType="java.util.Map">
	     insert into erp_material_norms_tock
	     (material_id, depot_id, norms_id, initial_tock)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.materialId}, #{item.depotId}, #{item.normsId}, #{item.initialTock})
		</foreach>  
	</insert>
	
	<delete id="deleteNormsStockMationByPartsId">
		DELETE
		FROM
			erp_material_norms_tock
		WHERE
			material_id = #{materialId}
	</delete>
	
	<select id="queryNormsStockMationToEditByNormId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.depot_id depotId,
			b.`name` depotName,
			a.initial_tock initialTock
		FROM
			erp_material_norms_tock a
			LEFT JOIN erp_depot b ON a.depot_id = b.id
		WHERE
			a.norms_id = #{id}
	</select>
	
	<select id="queryNormsStockMationByNormId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.depot_id depotId,
			b.`name` depotName,
			a.initial_tock initialTock
		FROM
			erp_material_norms_tock a
			LEFT JOIN erp_depot b ON a.depot_id = b.id
		WHERE
			a.norms_id = #{id}
	</select>
	
	<insert id="insertExtendsMation" parameterType="java.util.Map">
	     insert into erp_material_extend
	     (id, material_id, lable_name, content_name, order_by)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.materialId}, #{item.labelName}, #{item.content}, #{item.orderBy})
		</foreach>  
	</insert>
	
	<delete id="deleteExtendsMation">
		DELETE
		FROM
			erp_material_extend
		WHERE
			material_id = #{materialId}
	</delete>
	
	<select id="queryMaterialExtendMationToEditById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.lable_name lableName,
			a.content_name content
		FROM
			erp_material_extend a
		WHERE
			a.material_id = #{id}
		ORDER BY a.order_by ASC
	</select>
	
	<select id="queryMaterialProcedureMationToEditById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			b.id procedureId,
			b.`name` procedureName,
			b.number
		FROM
			erp_material_procedure a,
			erp_work_procedure b
		WHERE
			a.material_id = #{id}
		AND a.procedure_id = b.id
		AND b.whether_delete = '1'
		ORDER BY b.number ASC
	</select>
	
	<select id="queryMaterialExtendMationDetailsById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.lable_name lableName,
			a.content_name content
		FROM
			erp_material_extend a
		WHERE
			a.material_id = #{id}
		ORDER BY a.order_by ASC
	</select>
	
	<select id="queryMaterialProcedureMationDetailsById" resultType="java.util.Map">
		SELECT
			b.id procedureId,
			b.`name` procedureName,
			b.number,
			FORMAT(b.unit_price, 2) unitPrice
		FROM
			erp_material_procedure a,
			erp_work_procedure b
		WHERE
			a.material_id = #{materialId}
		AND a.procedure_id = b.id
		AND b.whether_delete = '1'
		ORDER BY b.number ASC
	</select>
	
	<select id="queryMaterialListByIds" resultType="java.util.Map">
		SELECT
			a.id productId,
			a.`name` productName,
			a.model productModel,
			a.unit,
			a.unit_name unitName,
			a.enabled,
			a.`type` typeId,
			CASE a.`type` WHEN '1' THEN '自产' WHEN '2' THEN '外购' ELSE '参数错误' END typeName,
			b.`name` categoryName,
			CONVERT (a.create_time, CHAR) createTime
		FROM
			erp_material a
			LEFT JOIN erp_material_category b ON a.category_id = b.id
		WHERE a.delete_flag = '0'
		AND a.enabled = '1'
			<if test="idsList != null and idsList.size() &gt; 0">
		        <foreach collection="idsList" item="id" separator="," open=" AND a.id in(" close=")">
		            #{id}
		        </foreach>
		    </if>
	</select>
	
	<insert id="insertMaterialProcedureMation" parameterType="java.util.Map">
	     insert into erp_material_procedure
	     (material_id, procedure_id)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.materialId}, #{item.procedureId})
		</foreach>  
	</insert>
	
	<delete id="deleteMaterialProcedureMation">
		DELETE
		FROM
			erp_material_procedure
		WHERE
			material_id = #{materialId}
	</delete>
	
    <select id="queryBomListByIdToSelect" resultType="java.util.Map">
    	SELECT
			a.id,
			a.title `name`
		FROM
			erp_bom_parent a
		WHERE
			a.whether_delete = '0'
		AND a.material_id = #{materialId}
		AND a.norms_id = #{normsId}
    </select>
    
    <select id="queryBomMaterialListByBomId" resultType="java.util.Map">
    	SELECT
			b.id productId,
			b.`name` productName,
			b.model productModel,
    	    a.id childId,
			CASE a.parent_id WHEN '0' THEN #{materialId} ELSE a.parent_id END pId,
			a.need_num needNum,
			a.unit_price unitPrice,
			a.wastage_price wastagePrice,
			a.type,
			CASE a.`type` WHEN '1' THEN '自产' WHEN '2' THEN '外购' ELSE '参数错误' END typeName,
			a.remark,
			a.norms_id normsId,
			CASE b.unit WHEN '1' THEN b.unit_name WHEN '2' THEN d.`name` ELSE '' END unitName,
			'true' open,
			'true' isParent
		FROM
			erp_bom_child a,
			erp_material b,
			erp_material_norms c
			LEFT JOIN erp_unit d ON c.unit_id = d.id
		WHERE a.bom_id = #{bomId}
		AND a.whether_delete = '0'
		AND a.material_id = b.id
		AND a.norms_id = c.id
    </select>
    
    <!-- 根据规格id查询商品信息 -->
    <select id="queryMaterialsByNormsId" resultType="java.util.Map">
    	SELECT
			a.id materialId,
			a.`name` materialName,
			a.model materialModel,
			b.id mUnitId,
			IFNULL(c.`name`, a.unit_name) unitName,
			IFNULL(c.number, '1') baseNumber
		FROM
			erp_material a,
			erp_material_norms b
			LEFT JOIN erp_unit c ON b.unit_id = c.id
		WHERE
			a.id = b.meterial_id
		AND b.id = #{normsId}
		AND a.id = b.meterial_id
		AND a.delete_flag = '0'
		AND b.delete_flag = '0'
    </select>
    
    <select id="queryMaterialReserveList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
			a.id,
			a.`name`,
			a.model,
			b.`name` categoryName,
			a.enabled,
			CASE a.`type` WHEN '1' THEN '自产' WHEN '2' THEN '外购' ELSE '参数错误' END typeName,
			CONVERT (a.create_time, CHAR) createTime,
			a.unit,
			a.unit_name unitName
		FROM
			erp_material a
			LEFT JOIN erp_material_category b ON a.category_id = b.id
		WHERE a.delete_flag = '0'
        <if test="categoryId != '' and categoryId != null">
            AND a.category_id = #{categoryId}
        </if>
        <if test="materialName != '' and materialName != null">
            AND a.`name` LIKE '%${materialName}%'
        </if>
        <if test="enabled != '' and enabled != null">
            AND a.enabled = #{enabled}
        </if>
        <if test="typeNum != '' and typeNum != null">
            AND a.`type` = #{typeNum}
        </if>
        <if test="model != '' and model != null">
            AND a.model LIKE '%${model}%'
        </if>
        GROUP BY a.id
        ORDER BY a.create_time DESC
    </select>
    
    <select id="queryErpBomChildProListByBomId" resultType="java.util.Map">
    	SELECT
			b.id productId,
			b.`name` productName,
			b.model productModel,
			CASE a.parent_id WHEN '0' THEN '0' ELSE a.parent_id END pId,
			a.need_num needNum,
			a.unit_price unitPrice,
			a.wastage_price wastagePrice,
			a.type,
			CASE a.`type` WHEN '1' THEN '自产' WHEN '2' THEN '外购' ELSE '参数错误' END typeName,
			a.remark,
			a.norms_id normsId,
			CASE b.unit WHEN '1' THEN b.unit_name WHEN '2' THEN d.`name` ELSE '' END unitName,
			bc.`name` categoryName,
			IFNULL((SELECT SUM(it.initial_tock) FROM erp_material_norms_tock it WHERE c.id = it.norms_id), 0) + 
				IFNULL((SELECT SUM(sn.stock_num) FROM erp_material_depot_stock sn WHERE c.id = sn.norms_id), 0) deportAllTock
		FROM
			erp_bom_child a,
			erp_material b
			LEFT JOIN erp_material_category bc ON b.category_id = bc.id,
			erp_material_norms c
			LEFT JOIN erp_unit d ON c.unit_id = d.id
		WHERE a.bom_id = #{bomId}
		AND a.whether_delete = '0'
		AND a.material_id = b.id
		AND a.norms_id = c.id
		GROUP BY c.id
    </select>
    
    <select id="queryMaterialInventoryWarningList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
			*
		FROM
			(SELECT
				b.id,
				b.`name`,
				b.model,
				b.`name` categoryName,
				CASE b.`type` WHEN '1' THEN '自产' WHEN '2' THEN '外购' ELSE '参数错误' END typeName,
				CONVERT (b.create_time, CHAR) createTime,
				b.unit,
				CASE b.unit WHEN '1' THEN b.unit_name WHEN '2' THEN d.`name` ELSE '' END unitName,
				a.safety_tock safetyTock,
				IFNULL((SELECT SUM(it.initial_tock) FROM erp_material_norms_tock it WHERE a.id = it.norms_id), 0) + 
					IFNULL((SELECT SUM(sn.stock_num) FROM erp_material_depot_stock sn WHERE a.id = sn.norms_id), 0) allTock
			FROM
				erp_material_norms a
				LEFT JOIN erp_unit d ON a.unit_id = d.id,
				erp_material b
				LEFT JOIN erp_material_category c ON b.category_id = c.id
			WHERE b.delete_flag = '0'
			AND b.enabled = '1'
			AND a.meterial_id = b.id
			AND a.delete_flag = '0'
	        <if test="categoryId != '' and categoryId != null">
	            AND b.category_id = #{categoryId}
	        </if>
	        <if test="materialName != '' and materialName != null">
	            AND b.`name` LIKE '%${materialName}%'
	        </if>
	        <if test="typeNum != '' and typeNum != null">
	            AND b.`type` = #{typeNum}
	        </if>
	        <if test="model != '' and model != null">
	            AND b.model LIKE '%${model}%'
	        </if>
	        GROUP BY a.id
	        ORDER BY b.create_time DESC) a
		WHERE a.safetyTock > a.allTock
    </select>
    
</mapper>