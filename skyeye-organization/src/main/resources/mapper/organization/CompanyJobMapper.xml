<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.eve.dao.CompanyJobDao">
	
	<select id="queryCompanyJobList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.job_name jobName,
			a.job_desc jobDesc,
			(SELECT COUNT(*) FROM sys_eve_user_staff b WHERE b.job_id = a.id) userNum,
			CONVERT(a.create_time, char) createTime,
			a.p_id pId,
			b.company_name companyName,
			c.department_name departmentName
		FROM
			company_job a
			LEFT JOIN company_mation b ON a.company_id = b.id 
			LEFT JOIN company_department c ON a.department_id = c.id 
		WHERE 1 = 1
			<if test="jobName != '' and jobName != null">
				AND a.job_name LIKE '%${jobName}%'
			</if>
			<if test="companyId != '' and companyId != null">
				AND a.company_id = #{companyId}
			</if>
			<if test="departmentId != '' and departmentId != null">
				AND a.department_id = #{departmentId}
			</if>
			ORDER BY a.create_time DESC
	</select>
	
	<select id="queryCompanyJobMationByName" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id
		FROM
			company_job a
		WHERE a.job_name = #{jobName}
			AND a.department_id = #{departmentId}
	</select>
	
	<insert id="insertCompanyJobMation" parameterType="java.util.Map">
	     INSERT into company_job
	     (id, company_id, department_id, job_name, job_desc, p_id, create_id, create_time)
	     VALUES
	     (#{id}, #{companyId}, #{departmentId}, #{jobName}, #{jobDesc}, #{pId}, #{createId}, #{createTime})
	</insert>
	
	<delete id="deleteCompanyJobMationById" parameterType="java.util.Map">
		DELETE
		FROM
			company_job
		WHERE
			id = #{id}
	</delete>
	
	<select id="queryCompanyJobMationToEditById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.job_name jobName,
			a.job_desc jobDesc,
			a.company_id companyId,
			a.department_id departmentId,
			a.p_id pId
		FROM
			company_job a
		WHERE a.id = #{id}
	</select>
	
	<select id="queryCompanyJobMationByNameAndId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id
		FROM
			company_job a
		WHERE a.job_name = #{jobName}
			AND a.id != #{id}
			AND a.department_id = #{departmentId}
	</select>
	
	<update id="editCompanyJobMationById" parameterType="java.util.Map">
		UPDATE company_job
		<set>
			<if test="jobName != '' and jobName != null">
				job_name = #{jobName},
			</if>
			job_desc = #{jobDesc},
			p_id = #{pId},
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryCompanyJobListTreeByDepartmentId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.job_name title,
			a.p_id parentId,
			'[{"type": "0", "isChecked": "0"}]' checkArr
		FROM
			company_job a
		WHERE a.department_id = #{departmentId}
		ORDER BY a.p_id ASC
	</select>
	
	<select id="queryCompanyJobListByToSelect" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.job_name name
		FROM
			company_job a
		WHERE a.department_id = #{departmentId}
	</select>
	
	<select id="queryCompanyJobSimpleListByToSelect" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.job_name name
		FROM
			company_job a
		WHERE a.department_id = #{departmentId}
		AND INSTR(CONCAT(',', a.p_id, ','), CONCAT(',', #{pId}, ','))
		<if test="id != '' and id != null">
			AND a.id != #{id}
		</if>
	</select>

	<select id="queryCompanyJobOrganization" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.job_name name,
			'职位' title,
			a.p_id parentId,
			a.department_id departmentId
		FROM
			company_job a
	</select>
	
</mapper>