<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.eve.dao.SchoolQuestionBankDao">

	<select id="querySchoolQuestionBankMationList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.qu_title quTitle,
			a.qu_type quType,
			a.`type`,
			CASE a.`type` WHEN 1 THEN '公开' WHEN 2 THEN '私有' ELSE '未知参数' END typeName,
			b.school_name schoolName,
			c.grade_name gradeName,
			d.subject_name subjectName,
			CONVERT(a.create_time, char) createTime
		FROM
			bank_question a
			LEFT JOIN school_mation b ON a.school_id = b.id
			LEFT JOIN school_grade_mation c ON a.grade_id = c.id
			LEFT JOIN school_subject_mation d ON a.subject_id = d.id
		WHERE a.visibility = '1'
		AND a.create_id = #{createId}
		<if test="quTitle != '' and quTitle != null">
			AND a.qu_title LIKE '%${quTitle}%'
		</if>
		<if test="gradeId != '' and gradeId != null">
			AND a.grade_id = #{gradeId}
		</if>
		<if test="subjectId != '' and subjectId != null">
			AND a.subject_id = #{subjectId}
		</if>
		<if test="type != '' and type != null">
			AND a.`type` = #{type}
		</if>
		<if test="quType != '' and quType != null">
			AND a.qu_type = #{quType}
		</if>
		<choose>
			<!-- 查询的不是所有的数据 -->
    		<when test="schoolPowerId != 'all'.toString()">
    			AND a.school_id = #{schoolPowerId}
    		</when>
    		<!-- 查询的是所有的数据 -->
    		<when test="schoolPowerId == 'all'.toString()">
    			<if test="schoolId != '' and schoolId != null">
					AND a.school_id = #{schoolId}
				</if>
    		</when>
		</choose>
		ORDER BY a.create_time DESC
	</select>
	
	<insert id="addQuestionMation" parameterType="java.util.Map">
	     INSERT INTO bank_question 
	     (id, answer_input_row, answer_input_width, cell_count, check_type, contacts_attr, contacts_field, copy_from_id, hv,
	     	param_int01, param_int02, parent_qu_id, qu_tag, qu_title, qu_type, rand_order, visibility, fraction,
	     	yesno_option, create_time, school_id, grade_id, subject_id, `type`, create_id, file_url, file_type, whether_upload,
	     	is_default_answer)
	     VALUES
	     (#{id}, #{answerInputRow}, #{answerInputWidth}, #{cellCount}, #{checkType}, #{contactsAttr}, #{contactsField}, #{copyFormId}, #{hv},
	     	#{paramInt01}, #{paramInt02}, #{parentQuId}, #{quTag}, #{quTitle}, #{quType}, #{randOrder}, #{visibility}, #{fraction},
	     	#{yesnoOption}, #{createTime}, #{schoolId}, #{gradeId}, #{subjectId}, #{type}, #{createId}, #{fileUrl}, #{fileType}, #{whetherUpload},
	     	#{isDefaultAnswer})
	</insert>
	
	<update id="editQuestionMationById" parameterType="java.util.Map">
		UPDATE bank_question
		<set>
			<if test="answerInputRow != '' and answerInputRow != null">
				answer_input_row = #{answerInputRow},
			</if>
			<if test="answerInputWidth != '' and answerInputWidth != null">
				answer_input_width = #{answerInputWidth},
			</if>
			cell_count = #{cellCount},
			<if test="checkType != '' and checkType != null">
				check_type = #{checkType},
			</if>
			contacts_attr = #{contactsAttr},
			fraction = #{fraction},
			contacts_field = #{contactsField},
			hv = #{hv},
			<if test="paramInt01 != '' and paramInt01 != null">
				param_int01 = #{paramInt01},
			</if>
			<if test="paramInt02 != '' and paramInt02 != null">
				param_int02 = #{paramInt02},
			</if>
			<if test="quTag != '' and quTag != null">
				qu_tag = #{quTag},
			</if>
			qu_title = #{quTitle},
			rand_order = #{randOrder},
			school_id = #{schoolId},
			grade_id = #{gradeId},
			subject_id = #{subjectId},
			`type` = #{type},
			file_url = #{fileUrl},
			file_type = #{fileType},
			whether_upload = #{whetherUpload},
			is_default_answer = #{isDefaultAnswer},
		</set>
		WHERE id = #{quId}
	</update>
	
	<insert id="addQuestionRadioMationList" parameterType="java.util.Map">
	     insert into bank_qu_radio
	     (id, qu_id, option_name, option_title, check_type, is_note, is_required_fill, order_by_id, visibility, is_default_answer, create_id, create_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.quId}, #{item.optionName}, #{item.optionTitle}, #{item.checkType}, #{item.isNote},
				#{item.isRequiredFill}, #{item.orderById}, #{item.visibility}, #{item.isDefaultAnswer}, #{item.createId}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<update id="editQuestionRadioMationList" parameterType="java.util.Map">
		<foreach collection="list" item="item" index="index" separator=";" >  
			UPDATE bank_qu_radio
				<set>
					order_by_id = #{item.orderById},
					option_name = #{item.optionName},
					check_type = #{item.checkType},
					is_note = #{item.isNote},
					is_required_fill = #{item.isRequiredFill},
					is_default_answer = #{item.isDefaultAnswer},
				</set>
			WHERE id = #{item.id}
		</foreach>  
	</update>
	
	<delete id="deleteOldBindingByQuId">
		DELETE
		FROM
			bank_question_knowledge
		WHERE
			question_id = #{questionId}
	</delete>
	
	<insert id="insertNewBinding" parameterType="java.util.Map">
	     INSERT INTO bank_question_knowledge
	     (question_id, knowledge_id)
	     VALUES
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.questionId}, #{item.id})  
		</foreach>  
	</insert>
	
	<update id="deleteSchoolQuestionBankMationById" parameterType="java.util.Map">
		UPDATE bank_question
		<set>
			visibility = '0',
		</set>
		WHERE id = #{id}
		AND create_id = #{createId}
	</update>
	
	<select id="queryQuestionKnowledgeByQuestionId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			b.id,
			b.title
		FROM
			bank_question_knowledge a,
			school_knowledge_points b
		WHERE a.question_id = #{questionId}
		AND a.knowledge_id = b.id
	</select>
	
	<select id="queryQuestionMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.answer_input_row answerInputRow,
			a.answer_input_width answerInputWidth,
			a.cell_count cellCount,
			a.check_type checkType,
			a.contacts_attr contactsAttr,
			a.contacts_field contactsField,
			a.copy_from_id copyFromId,
			a.create_time createTime,
			a.hv,
			a.param_int01 paramInt01,
			a.param_int02 paramInt02,
			a.parent_qu_id parentQuId,
			a.qu_tag quTag,
			a.qu_title quTitle,
			a.qu_type quType,
			a.rand_order randOrder,
			a.visibility,
			a.yesno_option yesnoOption,
			a.school_id schoolId,
			a.grade_id gradeId,
			a.subject_id subjectId,
			a.`type`,
			a.fraction,
			a.file_url fileUrl,
			a.file_type fileType,
			a.whether_upload whetherUpload,
			a.is_default_answer isDefaultAnswer
		FROM
			bank_question a
		WHERE a.id = #{questionId}
		AND a.visibility = '1'
	</select>
	
	<select id="queryQuestionRadioListByQuestionId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.check_type checkType,
			a.is_note isNote,
			a.is_required_fill isRequiredFill,
			a.option_name optionName,
			a.option_title optionTitle,
			a.order_by_id orderById,
			a.qu_id quId,
			a.visibility,
			#{cellCount} cellCount,
			#{quType} quType,
			CASE a.is_default_answer WHEN '1' THEN 'checked' ELSE '' END isDefaultAnswer,
			'0' quItemSaveTag
		FROM
			bank_qu_radio a
		WHERE
			a.qu_id = #{id}
		AND a.visibility = '1'
		ORDER BY a.order_by_id ASC
	</select>
	
	<delete id="deleteQuestionRadioOptionMationList">
		DELETE
		FROM
			bank_qu_radio
		WHERE 1=1
			<if test="idsList != null and idsList.size() &gt; 0">
		        <foreach collection="idsList" item="id" separator="," open=" AND id in(" close=")">
		            #{id}
		        </foreach>
		    </if>
	</delete>
	
	<insert id="addQuestionCheckBoxMationList" parameterType="java.util.Map">
	     insert into bank_qu_checkbox
	     (id, qu_id, option_name, option_title, check_type, is_note, is_required_fill, order_by_id, visibility, is_default_answer, create_id, create_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.quId}, #{item.optionName}, #{item.optionTitle}, #{item.checkType}, #{item.isNote},
				#{item.isRequiredFill}, #{item.orderById}, #{item.visibility}, #{item.isDefaultAnswer}, #{item.createId}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<update id="editQuestionCheckBoxMationList" parameterType="java.util.Map">
		<foreach collection="list" item="item" index="index" separator=";" >  
			UPDATE bank_qu_checkbox
				<set>
					order_by_id = #{item.orderById},
					option_name = #{item.optionName},
					check_type = #{item.checkType},
					is_note = #{item.isNote},
					is_required_fill = #{item.isRequiredFill},
					is_default_answer = #{item.isDefaultAnswer},
				</set>
			WHERE id = #{item.id}
		</foreach>  
	</update>
	
	<delete id="deleteQuestionCheckBoxOptionMationList">
		DELETE
		FROM
			bank_qu_checkbox
		WHERE 1=1
			<if test="idsList != null and idsList.size() &gt; 0">
		        <foreach collection="idsList" item="id" separator="," open=" AND id in(" close=")">
		            #{id}
		        </foreach>
		    </if>
	</delete>
	
	<select id="queryQuestionCheckBoxListByQuestionId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.check_type checkType,
			a.is_note isNote,
			a.is_required_fill isRequiredFill,
			a.option_name optionName,
			a.option_title optionTitle,
			a.order_by_id orderById,
			a.qu_id quId,
			a.visibility,
			CASE a.is_default_answer WHEN '1' THEN 'checked' ELSE '' END isDefaultAnswer,
			#{quType} quType,
			'0' quItemSaveTag
		FROM
			bank_qu_checkbox a
		WHERE
			a.qu_id = #{id}
		AND a.visibility = '1'
		ORDER BY
			a.order_by_id ASC
	</select>
	
	<delete id="deleteQuestionScoreOptionMationList">
		DELETE
		FROM
			bank_qu_score
		WHERE 1=1
			<if test="idsList != null and idsList.size() &gt; 0">
		        <foreach collection="idsList" item="id" separator="," open=" AND id in(" close=")">
		            #{id}
		        </foreach>
		    </if>
	</delete>
	
	<insert id="addQuestionScoreMationList" parameterType="java.util.Map">
	     insert into bank_qu_score
	     (id, qu_id, option_name, option_title, order_by_id, visibility, create_id, create_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.quId}, #{item.optionName}, #{item.optionTitle}, #{item.orderById}, #{item.visibility}, #{item.createId}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<update id="editQuestionScoreMationList" parameterType="java.util.Map">
		<foreach collection="list" item="item" index="index" separator=";" >  
			UPDATE bank_qu_score
				<set>
					order_by_id = #{item.orderById},
					option_name = #{item.optionName},
				</set>
			WHERE id = #{item.id}
		</foreach>  
	</update>
	
	<select id="queryQuestionScoreListByQuestionId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.qu_id quId,
			a.option_name optionName,
			a.option_title optionTitle,
			a.order_by_id orderById,
			a.visibility,
			#{paramInt02} paramInt02,
			#{quType} quType,
			'0' quItemSaveTag
		FROM
			bank_qu_score a
		WHERE
			a.qu_id = #{id}
		AND a.visibility = '1'
		ORDER BY
			a.order_by_id ASC
	</select>
	
	<delete id="deleteQuestionOrderOptionMationList">
		DELETE
		FROM
			bank_qu_orderby
		WHERE 1=1
			<if test="idsList != null and idsList.size() &gt; 0">
		        <foreach collection="idsList" item="id" separator="," open=" AND id in(" close=")">
		            #{id}
		        </foreach>
		    </if>
	</delete>
	
	<insert id="addQuestionOrderquMationList" parameterType="java.util.Map">
	     insert into bank_qu_orderby
	     (id, qu_id, option_name, option_title, order_by_id, visibility, create_id, create_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.quId}, #{item.optionName}, #{item.optionTitle}, #{item.orderById}, #{item.visibility}, #{item.createId}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<update id="editQuestionOrderquMationList" parameterType="java.util.Map">
		<foreach collection="list" item="item" index="index" separator=";" >  
			UPDATE bank_qu_orderby
				<set>
					order_by_id = #{item.orderById},
					option_name = #{item.optionName},
				</set>
			WHERE id = #{item.id}
		</foreach>  
	</update>
	
	<select id="queryQuestionOrderByListByQuestionId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.qu_id quId,
			a.option_name optionName,
			a.option_title optionTitle,
			a.order_by_id orderById,
			a.visibility,
			#{quType} quType,
			(@i:= @i+1) AS dataIndex,
			'0' quItemSaveTag
		FROM
			bank_qu_orderby a,
			(SELECT @i:=0) as i
		WHERE
			a.qu_id = #{id}
		AND a.visibility = '1'
		ORDER BY
			a.order_by_id ASC
	</select>
	
	<delete id="deleteQuestionMultiFillblankOptionMationList">
		DELETE
		FROM
			bank_qu_multi_fillblank
		WHERE 1=1
			<if test="idsList != null and idsList.size() &gt; 0">
		        <foreach collection="idsList" item="id" separator="," open=" AND id in(" close=")">
		            #{id}
		        </foreach>
		    </if>
	</delete>
	
	<insert id="addQuestionMultiFillblankMationList" parameterType="java.util.Map">
	     insert into bank_qu_multi_fillblank
	     (id, qu_id, option_name, option_title, check_type, order_by_id, visibility,
	      is_default_answer, create_id, create_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.quId}, #{item.optionName}, #{item.optionTitle}, #{item.checkType}, #{item.orderById}, #{item.visibility},
			 #{item.isDefaultAnswer}, #{item.createId}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<update id="editQuestionMultiFillblankMationList" parameterType="java.util.Map">
		<foreach collection="list" item="item" index="index" separator=";" >  
			UPDATE bank_qu_multi_fillblank
				<set>
					order_by_id = #{item.orderById},
					option_name = #{item.optionName},
					is_default_answer = #{item.isDefaultAnswer},
				</set>
			WHERE id = #{item.id}
		</foreach>  
	</update>
	
	<select id="queryQuestionMultiFillBlankListByQuestionId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.check_type checkType,
			a.option_name optionName,
			a.option_title optionTitle,
			a.order_by_id orderById,
			a.qu_id quId,
			a.visibility,
			#{quType} quType,
			a.is_default_answer isDefaultAnswer,
			'0' quItemSaveTag
		FROM
			bank_qu_multi_fillblank a
		WHERE
			a.qu_id = #{id}
		AND a.visibility = '1'
		ORDER BY
			a.order_by_id ASC
	</select>
	
	<delete id="deleteQuestionColumnOptionMationList">
		DELETE
		FROM
			bank_qu_chen_column
		WHERE 1=1
			<if test="idsList != null and idsList.size() &gt; 0">
		        <foreach collection="idsList" item="id" separator="," open=" AND id in(" close=")">
		            #{id}
		        </foreach>
		    </if>
	</delete>
	
	<insert id="addQuestionColumnMationList" parameterType="java.util.Map">
	     insert into bank_qu_chen_column
	     (id, qu_id, option_name, order_by_id, visibility, create_id, create_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.quId}, #{item.optionName}, #{item.orderById}, #{item.visibility}, #{item.createId}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<update id="editQuestionColumnMationList" parameterType="java.util.Map">
		<foreach collection="list" item="item" index="index" separator=";" >  
			UPDATE bank_qu_chen_column
				<set>
					order_by_id = #{item.orderById},
					option_name = #{item.optionName},
				</set>
			WHERE id = #{item.id}
		</foreach>  
	</update>
	
	<delete id="deleteQuestionRowOptionMationList">
		DELETE
		FROM
			bank_qu_chen_row
		WHERE 1=1
			<if test="idsList != null and idsList.size() &gt; 0">
		        <foreach collection="idsList" item="id" separator="," open=" AND id in(" close=")">
		            #{id}
		        </foreach>
		    </if>
	</delete>
	
	<insert id="addQuestionRowMationList" parameterType="java.util.Map">
	     insert into bank_qu_chen_row
	     (id, qu_id, option_name, order_by_id, visibility, create_id, create_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.quId}, #{item.optionName}, #{item.orderById}, #{item.visibility}, #{item.createId}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<update id="editQuestionRowMationList" parameterType="java.util.Map">
		<foreach collection="list" item="item" index="index" separator=";" >  
			UPDATE bank_qu_chen_row
				<set>
					order_by_id = #{item.orderById},
					option_name = #{item.optionName},
				</set>
			WHERE id = #{item.id}
		</foreach>  
	</update>
	
	<select id="queryQuestionChenRowListByQuestionId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.option_name optionName,
			a.order_by_id orderById,
			a.qu_id quId,
			a.visibility,
			#{quType} quType,
			'0' quItemSaveTag
		FROM
			bank_qu_chen_row a
		WHERE
			a.qu_id = #{id}
		AND a.visibility = '1'
		ORDER BY
			a.order_by_id ASC
	</select>
	
	<select id="queryQuestionChenColumnListByQuestionId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.option_name optionName,
			a.order_by_id orderById,
			a.qu_id quId,
			a.visibility,
			#{quType} quType,
			'0' quItemSaveTag
		FROM
			bank_qu_chen_column a
		WHERE
			a.qu_id = #{id}
		AND a.visibility = '1'
		ORDER BY
			a.order_by_id ASC
	</select>
	
	<select id="queryQuestionChenOptionListByQuestionId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.qu_id quId,
			a.option_name optionName,
			a.order_by_id orderById
		FROM
			bank_qu_chen_option a
		WHERE
			a.qu_id = #{id}
		ORDER BY
			a.order_by_id ASC
	</select>
	
	<select id="querySchoolQuestionBankMationListToChoose" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id quInBankId,
			a.qu_title quTitle,
			a.qu_type quType,
			a.`type`,
			CASE a.`type` WHEN 1 THEN '公开' WHEN 2 THEN '私有' ELSE '未知参数' END typeName,
			b.school_name schoolName,
			c.grade_name gradeName,
			d.subject_name subjectName,
			CONVERT(a.create_time, char) createTime
		FROM
			bank_question a
			LEFT JOIN school_mation b ON a.school_id = b.id
			LEFT JOIN school_grade_mation c ON a.grade_id = c.id
			LEFT JOIN school_subject_mation d ON a.subject_id = d.id
		WHERE a.visibility = '1'
		AND (a.`type` = 1 OR (a.`type` = 2 AND a.create_id = #{createId}))
		<if test="quTitle != '' and quTitle != null">
			AND a.qu_title LIKE '%${quTitle}%'
		</if>
		<if test="gradeId != '' and gradeId != null">
			AND a.grade_id = #{gradeId}
		</if>
		<if test="subjectId != '' and subjectId != null">
			AND a.subject_id = #{subjectId}
		</if>
		<if test="type != '' and type != null">
			AND a.`type` = #{type}
		</if>
		<if test="quType != '' and quType != null">
			AND a.qu_type = #{quType}
		</if>
		<choose>
			<!-- 查询的不是所有的数据 -->
    		<when test="schoolPowerId != 'all'.toString()">
    			AND a.school_id = #{schoolPowerId}
    		</when>
    		<!-- 查询的是所有的数据 -->
    		<when test="schoolPowerId == 'all'.toString()">
    			<if test="schoolId != '' and schoolId != null">
					AND a.school_id = #{schoolId}
				</if>
    		</when>
		</choose>
		ORDER BY a.create_time DESC
	</select>
	
	<select id="querySchoolQuestionBankMationListByIds" resultType="java.util.Map">
		SELECT
			a.id quInBankId,
			a.answer_input_row answerInputRow,
			a.answer_input_width answerInputWidth,
			a.cell_count cellCount,
			a.check_type checkType,
			a.contacts_attr contactsAttr,
			a.contacts_field contactsField,
			a.copy_from_id copyFromId,
			a.create_time createTime,
			a.hv,
			a.param_int01 paramInt01,
			a.param_int02 paramInt02,
			a.parent_qu_id parentQuId,
			a.qu_tag quTag,
			a.qu_title quTitle,
			a.qu_type quType,
			a.rand_order randOrder,
			a.visibility,
			a.yesno_option yesnoOption,
			a.school_id schoolId,
			a.grade_id gradeId,
			a.subject_id subjectId,
			GROUP_CONCAT(DISTINCT b.knowledge_id) knowledgeIds,
			a.`type`,
			a.fraction,
			a.file_url fileUrl,
			a.file_type fileType,
			a.whether_upload whetherUpload,
			a.is_default_answer isDefaultAnswer
		FROM
			bank_question a
			LEFT JOIN bank_question_knowledge b ON a.id = b.question_id
		WHERE a.visibility = '1'
			<if test="idsList != null and idsList.size() &gt; 0">
		        <foreach collection="idsList" item="id" separator="," open=" AND a.id in(" close=")">
		            #{id}
		        </foreach>
		    </if>
		GROUP BY a.id
	</select>
	
	<select id="querySchoolQuestionBankMationAllList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id quInBankId,
			a.qu_title quTitle,
			a.qu_type quType,
			a.`type`,
			CASE a.`type` WHEN 1 THEN '公开' WHEN 2 THEN '私有' ELSE '未知参数' END typeName,
			b.school_name schoolName,
			c.grade_name gradeName,
			d.subject_name subjectName,
			CONVERT(a.create_time, char) createTime
		FROM
			bank_question a
			LEFT JOIN school_mation b ON a.school_id = b.id
			LEFT JOIN school_grade_mation c ON a.grade_id = c.id
			LEFT JOIN school_subject_mation d ON a.subject_id = d.id
		WHERE a.visibility = '1'
		AND (a.`type` = 1 OR (a.`type` = 2 AND a.create_id = #{createId}))
		<if test="gradeId != '' and gradeId != null">
			AND a.grade_id = #{gradeId}
		</if>
		<if test="subjectId != '' and subjectId != null">
			AND a.subject_id = #{subjectId}
		</if>
		<choose>
			<!-- 查询的不是所有的数据 -->
    		<when test="schoolPowerId != 'all'.toString()">
    			AND a.school_id = #{schoolPowerId}
    		</when>
    		<!-- 查询的是所有的数据 -->
    		<when test="schoolPowerId == 'all'.toString()">
    			<if test="schoolId != '' and schoolId != null">
					AND a.school_id = #{schoolId}
				</if>
    		</when>
		</choose>
		ORDER BY a.create_time DESC
	</select>
	
</mapper>