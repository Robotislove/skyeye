<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.eve.dao.SealApplyBorrowDao">

    <!-- 用于展示当前用户的印章借用申请列表 -->
    <select id="selectMySealBorrowList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            a.id,
            a.title,
            a.odd_number oddNum,
            a.process_instance_id processInstanceId,
            a.state,
            CONVERT(a.create_time, char) createTime
        FROM
            seal_manage_use a
        WHERE a.create_id = #{userId}
        <if test="state != '' and state != null">
            AND a.state = #{state}
        </if>
        <if test="startTime != '' and startTime != null and endTime != '' and endTime != null">
            AND a.create_time >= #{startTime} AND #{endTime} >= a.create_time
        </if>
        ORDER BY a.create_time DESC
    </select>

    <insert id="insertSealBorrowMation" parameterType="java.util.Map">
        INSERT into seal_manage_use
        (id, title, odd_number, state, process_instance_id, remark, enclosure_info, create_id, create_time)
        VALUES(#{id}, #{title}, #{oddNumber}, #{state}, #{processInstanceId}, #{remark}, #{enclosureInfo}, #{createId}, #{createTime})
    </insert>

    <insert id="insertSealBorrowGoodsMation" parameterType="java.util.Map">
        insert into seal_manage_use_goods
        (id, use_id, seal_manage_id, seal_manage_name, remark, state)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id}, #{item.useId}, #{item.sealId}, #{item.sealName}, #{item.remark}, #{item.state})
        </foreach>
    </insert>

    <!-- 根据流程id获取借用id及审批状态 -->
    <select id="querySealBorrowByProcessInstanceId" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            a.id,
            a.state,
            a.create_id createId
        FROM
            seal_manage_use a
        WHERE
            a.process_instance_id = #{processInstanceId}
    </select>

    <!-- 根据借用id获取借用数据 -->
    <select id="querySealBorrowMationById" resultType="java.util.Map">
        SELECT
            a.id,
            a.title,
            a.odd_number oddNumber,
            a.remark,
            b.user_name userName,
            a.state,
            IFNULL(a.enclosure_info, '') enclosureInfo,
            IFNULL(a.process_instance_id, '') processInstanceId
        FROM
            seal_manage_use a
            LEFT JOIN sys_eve_user_staff b ON a.create_id = b.user_id
        WHERE
            a.id = #{id}
    </select>

    <!-- 根据借用id获取关联表数据用于详情 -->
    <select id="queryBorrowSealById" resultType="java.util.Map">
        SELECT
            a.id,
            a.seal_manage_id sealManageId,
            a.seal_manage_name sealName,
            a.remark,
            a.state,
            CASE a.state WHEN '0' THEN '未提交审批' WHEN '1' THEN '等待发放' WHEN '2' THEN '库存不足' WHEN '3' THEN '库存充足' WHEN '4' THEN '拒绝发放' END stateName
        FROM
            seal_manage_use_goods a
        WHERE a.use_id = #{borrowId}
    </select>

    <!-- 根据借用id获取关联表数据用于编辑 -->
    <select id="querySealBorrowGoodsMationToEditById" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            a.seal_manage_id sealId,
            a.remark
        FROM
            seal_manage_use_goods a
        WHERE a.use_id = #{id}
    </select>

    <!--  根据借用id编辑借用表的数据 -->
    <update id="updateSealBorrowMation" parameterType="java.util.Map">
        UPDATE seal_manage_use
        <set>
            remark = #{remark},
            enclosure_info = #{enclosureInfo}
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据借用id删除关联表的数据 -->
    <delete id="deleteSealBorrowGoodsMationById" parameterType="java.util.Map">
        DELETE
        FROM
            seal_manage_use_goods
        WHERE
            use_id = #{id}
    </delete>

    <!-- 根据借用id将审批状态更改为作废 -->
    <update id="updateSealBorrowToCancellation" parameterType="java.util.Map">
        UPDATE seal_manage_use
        <set>
            state = 4
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据借用id将借用审批状态更改为审批中 -->
    <update id="updateSealBorrowStateISInAudit">
        UPDATE seal_manage_use
        <set>
            state = '1',
            process_instance_id = #{processInId}
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据借用id将关联表中的状态更改为等待发放 -->
    <update id="updateSealBorrowGoodsStateISInAudit">
        UPDATE seal_manage_use_goods
        <set>
            state = '1'
        </set>
        WHERE use_id = #{id}
    </update>

    <!--  根据借用id更改借用表中的审批状态 -->
    <update id="editSealBorrowById">
        update seal_manage_use
        <set>
            state = #{state},
        </set>
        WHERE id = #{id}
    </update>

    <update id="editSealBorrowToRevokeById" parameterType="java.util.Map">
        update seal_manage_use
        <set>
            state = 5,
            process_instance_id = ''
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据关联表id更改关联表中印章的库存状态 -->
    <update id="editSealBorrowGoodsByBorrowId" parameterType="java.util.Map">
        update seal_manage_use_goods
        <set>
            state = #{state}
        </set>
        WHERE use_id = #{borrowId}
    </update>

    <update id="editSealBorrowGoodsById" parameterType="java.util.Map">
        update seal_manage_use_goods
        <set>
            state = #{state}
        </set>
        WHERE id = #{id}
    </update>

</mapper>