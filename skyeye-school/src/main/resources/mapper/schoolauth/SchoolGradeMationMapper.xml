<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.school.dao.SchoolGradeMationDao">
	
	<select id="querySchoolGradeMationList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			b.school_name schoolName,
			a.grade_name gradeName,
			a.grade_order gradeOrder,
			a.year_n yearN,
			a.type,
			CASE a.type WHEN '1' THEN '正常年级' WHEN '2' THEN '补习班' ELSE '参数错误' END typeName,
			a.parent_id pId,
			(SELECT COUNT(*) FROM school_grade_mation f WHERE a.id = f.parent_id) childsNum
		FROM
			school_grade_mation a,
			school_mation b
		WHERE a.school_id = b.id
			<if test="gradeName != '' and gradeName != null">
				AND a.grade_name LIKE '%${gradeName}%'
			</if>
			<choose>
				<!-- 查询的不是所有的数据 -->
	    		<when test="schoolPowerId != 'all'.toString()">
	    			AND a.school_id = #{schoolPowerId}
	    		</when>
	    		<!-- 查询的是所有的数据 -->
	    		<when test="schoolPowerId == 'all'.toString()">
	    			<if test="schoolId != '' and schoolId != null">
						AND a.school_id = #{schoolId}
					</if>
	    		</when>
			</choose>
			ORDER BY a.grade_order ASC
	</select>
	
	<select id="querySchoolGradeMationByName" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id
		FROM
			school_grade_mation a
		WHERE a.grade_name = #{gradeName}
		AND a.school_id = #{schoolId}
		<if test="type = 2">
			AND a.parent_id = #{pId}
		</if>
		<if test="id != '' and id != null">
			AND a.id != #{id}
		</if>
	</select>
	
	<insert id="insertSchoolGradeMation" parameterType="java.util.Map">
	     INSERT into school_grade_mation
	     (id, school_id, grade_name, grade_order, year_n, type, parent_id, create_id, create_time)
	     VALUES
	     (#{id}, #{schoolId}, #{gradeName}, #{gradeOrder}, #{yearN}, #{type}, #{pId}, #{createId}, #{createTime})
	</insert>
	
	<delete id="deleteSchoolGradeMationById" parameterType="java.util.Map">
		DELETE a.*, b.*
		FROM
			school_grade_mation a
		LEFT JOIN school_class_mation b ON a.id = b.grade_id
		WHERE
			a.id = #{id}
	</delete>
	
	<select id="querySchoolGradeMationToEditById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			b.school_name schoolName,
			a.grade_name gradeName,
			a.grade_order gradeOrder,
			a.year_n yearN,
			a.type,
			CASE a.type WHEN 1 THEN '正常年级' WHEN 2 THEN '补习班' END typeName,
			IFNULL(c.grade_name, '0') parentName
		FROM
			school_grade_mation a
			LEFT JOIN school_grade_mation c ON a.parent_id = c.id,
			school_mation b
		WHERE a.id = #{id}
		AND a.school_id = b.id
	</select>
	
	<update id="editSchoolGradeMationById" parameterType="java.util.Map">
		UPDATE school_grade_mation
		<set>
			grade_name = #{gradeName},
			year_n = #{yearN},
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryAllGradeMationBySchoolId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.grade_name name
		FROM
			school_grade_mation a
		WHERE a.type = 1
		<choose>
			<!-- 查询的不是所有的数据 -->
    		<when test="schoolPowerId != 'all'.toString()">
    			AND a.school_id = #{schoolPowerId}
    		</when>
    		<!-- 查询的是所有的数据 -->
    		<when test="schoolPowerId == 'all'.toString()">
    			<if test="schoolId != '' and schoolId != null">
					AND a.school_id = #{schoolId}
				</if>
    		</when>
		</choose>
		ORDER BY a.grade_order ASC
	</select>
	
	<select id="querySchoolGradeOrderByNumber" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			MAX(a.grade_order) gradeOrder
		FROM
			school_grade_mation a
		WHERE
			a.school_id = #{schoolId}
			AND a.parent_id = #{pId}
	</select>
	
	<select id="queryGradeUpMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.grade_order thisOrderBy,
			b.id,
			b.grade_order prevOrderBy
		FROM
			school_grade_mation a,
			school_grade_mation b
		WHERE
			a.id = #{id}
		AND a.parent_id = b.parent_id
		AND a.school_id = b.school_id
		AND a.grade_order > b.grade_order
		ORDER BY
			b.grade_order DESC
		LIMIT 1
	</select>
	
	<update id="editGradeMationOrderNumToUp" parameterType="java.util.Map">
		UPDATE school_grade_mation
		<set>
			grade_order = #{upOrderBy},
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryGradeDownMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.grade_order thisOrderBy,
			b.id,
			b.grade_order prevOrderBy
		FROM
			school_grade_mation a,
			school_grade_mation b
		WHERE
			a.id = #{id}
		AND a.parent_id = b.parent_id
		AND a.school_id = b.school_id
		AND b.grade_order > a.grade_order
		ORDER BY
			b.grade_order ASC
		LIMIT 1
	</select>
	
	<select id="queryGradeNowYearMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.`year`
		FROM
			school_class_mation a
		WHERE
			a.grade_id = #{gradeId}
		GROUP BY a.`year`
		ORDER BY a.`year` DESC
		LIMIT 1
	</select>
	
	<select id="queryClassMationList" resultType="java.util.Map">
		SELECT
			a.id,
			a.class_name `name`
		FROM
			school_class_mation a
		WHERE
			a.grade_id = #{gradeId}
		AND a.`year` = #{year}
		ORDER BY a.create_time ASC
	</select>
	
</mapper>