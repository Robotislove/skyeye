<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.dao.ErpPickDao">
	
	<!-- 领料单,退料单,补料单列表 -->
	<select id="queryErpPickOrderList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
			a.id,
			a.default_number defaultNumber,
			CONVERT (a.oper_time, char) operTime,
			FORMAT(a.total_price, 2) totalPrice,
			a.`status`,
			a.`type`,
			b.order_num machinNum,
			g.user_name createName,
			CONVERT (a.create_time, char) createTime
		FROM
			erp_pick_header a
			LEFT JOIN erp_machin_header b ON a.machin_id = b.id,
			sys_eve_user_staff g
		WHERE a.create_id = g.user_id
		AND a.type = #{type}
		AND a.department_id = #{departMentId}
        <if test="defaultNumber != '' and defaultNumber != null">
            AND a.default_number LIKE '%${defaultNumber}%'
        </if>
        ORDER BY a.create_time DESC
    </select>

    <!-- 插入主单据信息 -->
    <insert id="insertOrderParentMation" parameterType="java.util.Map">
        INSERT INTO erp_pick_header
        (id, default_number, `type`, oper_time, total_price, remark, department_id, `status`, machin_id, 
        	production_id, create_id, create_time, depot_id)
        VALUES
        (#{id}, #{defaultNumber}, #{type}, #{operTime}, #{totalPrice}, #{remark}, #{departmentId}, #{status}, #{machinId},
    		#{productionId}, #{createId}, #{createTime}, #{depotId})
    </insert>
    
    <!-- 插入子单据信息 -->
    <insert id="insertOrderChildMation" parameterType="java.util.Map">
	     INSERT INTO erp_pick_child
	     (id, header_id, department_id, material_id, norms_id, need_num, unit_price, all_price)
	     VALUES
		<foreach collection="list" item="item" index="index" separator="," >  
		(#{item.id}, #{item.headerId}, #{item.departmentId}, #{item.materialId}, #{item.mUnitId}, #{item.operNumber}, #{item.unitPrice}, #{item.allPrice})  
		</foreach>  
	</insert>
	
	<select id="queryHeaderMationById" resultType="java.util.Map">
        SELECT
			a.id,
			a.default_number defaultNumber,
			CONVERT(a.oper_time, char) operTime,
			FORMAT(a.total_price, 2) totalPrice,
			a.remark,
			a.machin_id machinId,
			a.production_id productionId,
			a.examine_content examineContent,
			a.`status`,
			a.depot_id depotId,
			b.order_num machinNum,
			g.user_name createName,
			CONVERT (a.create_time, char) createTime
		FROM
			erp_pick_header a
			LEFT JOIN erp_machin_header b ON a.machin_id = b.id,
			sys_eve_user_staff g
		WHERE a.create_id = g.user_id
		AND a.type = #{type}
		AND a.id = #{orderId}
    </select>
    
    <select id="queryChildMationById" resultType="java.util.Map">
        SELECT
			a.id,
			a.material_id productId,
			a.norms_id normsId,
			a.need_num needNumber,
			a.unit_price unitPrice,
			a.all_price allPrice,
			d.`name` productName,
			d.model productModel,
			d.unit,
			CASE d.unit WHEN '1' THEN d.unit_name WHEN '2' THEN f.`name` ELSE '' END unitName,
			IFNULL((SELECT SUM(it.initial_tock) FROM erp_material_norms_tock it WHERE a.norms_id = it.norms_id), 0) + 
				IFNULL((SELECT SUM(sn.stock_num) FROM erp_material_depot_stock sn WHERE a.norms_id = sn.norms_id), 0) currentTock #当前库存
		FROM
			erp_pick_child a
			LEFT JOIN erp_material d ON a.material_id = d.id
			LEFT JOIN erp_material_norms e ON a.norms_id = e.id
			LEFT JOIN erp_unit f ON e.unit_id = f.id
		WHERE
			a.header_id = #{orderId}
		GROUP BY a.id
    </select>
    
    <update id="editRequisitionMaterialOrderById">
        UPDATE erp_pick_header
        <set>
            oper_time = #{operTime},
            total_price = #{totalPrice},
            remark = #{remark},
            depot_id = #{depotId},
            machin_id = #{machinId},
            production_id = #{productionId},
        </set>
        WHERE
            id = #{id}
        AND `type` = #{type}
    </update>
    
    <delete id="deleteOrderChildMationByHeaderId">
        DELETE
		FROM
			erp_pick_child
		WHERE
			header_id = #{orderId}
    </delete>
    
    <select id="queryPickOrderMationById" resultType="java.util.Map">
        SELECT
			a.id,
			a.default_number defaultNumber,
			CONVERT(a.oper_time, char) operTime,
			FORMAT(a.total_price, 2) totalPrice,
			a.remark,
			a.examine_content examineContent,
			a.`status`,
			a.`type`,
			a.department_id departmentId,
			a.machin_id machinId,
			b.order_num machinNum,
			c.`name` depotName,
			g.user_name createName,
			CONVERT (a.create_time, char) createTime
		FROM
			erp_pick_header a
			LEFT JOIN erp_machin_header b ON a.machin_id = b.id
			LEFT JOIN erp_depot c ON a.depot_id = c.id,
			sys_eve_user_staff g
		WHERE a.create_id = g.user_id
		AND a.id = #{orderId}
    </select>
    
    <delete id="deletePickOrderMationById">
        DELETE
		FROM
			erp_pick_header
		WHERE
			id = #{orderId}
    </delete>
    
    <update id="editPickOrderMationToSubById">
        UPDATE erp_pick_header
        <set>
            `status` = '1',
        </set>
        WHERE
            id = #{orderId}
    </update>
    
    <update id="editPickOrderMationToExamineById">
        UPDATE erp_pick_header
        <set>
            `status` = #{status},
            examine_id = #{examineId},
            examine_content = #{examineContent},
            examine_time = #{examineTime},
			real_complate_time = #{realComplateTime},
        </set>
        WHERE
            id = #{orderId}
    </update>
    
    <select id="queryPickOrderMationToExamineById" resultType="java.util.Map">
        SELECT
			a.id,
			a.material_id materialId,
			a.norms_id normsId,
			a.need_num needNumber,
			#{departMentId} departMentId,
			ph.depot_id depotId,
			IFNULL((SELECT SUM(it.initial_tock) FROM erp_material_norms_tock it WHERE a.norms_id = it.norms_id AND it.depot_id = ph.depot_id), 0) + 
				IFNULL((SELECT SUM(sn.stock_num) FROM erp_material_depot_stock sn WHERE a.norms_id = sn.norms_id AND sn.depot_id = ph.depot_id), 0) currentTock, #当前库存
			IFNULL((SELECT SUM(eds.stock_num) FROM erp_department_stock eds WHERE a.norms_id = eds.norms_id AND eds.department_id = #{departMentId}), 0) departMentTock # 部门存量
		FROM
			erp_pick_child a,
			erp_pick_header ph
		WHERE
			a.header_id = #{orderId}
		AND a.header_id = ph.id
		GROUP BY a.id
    </select>
    
    <select id="queryDepartMentStockByDepartIdAndNormsId" resultType="java.util.Map">
    	SELECT
			a.stock_num stockNum
		FROM
			erp_department_stock a
		WHERE
			a.department_id = #{departMentId}
		AND a.norms_id = #{normsId}
    </select>
    
    <update id="editDepartMentStockByDepotIdAndNormsId">
        UPDATE erp_department_stock
        <set>
            stock_num = #{stockNum}
        </set>
        WHERE
            department_id = #{departMentId}
        AND norms_id = #{normsId}
    </update>
    
    <insert id="insertDepartMentStockByDepotIdAndNormsId" parameterType="java.util.Map">
        INSERT INTO erp_department_stock
        (department_id, material_id, norms_id, stock_num)
        VALUES
        (#{departMentId}, #{materialId}, #{normsId}, #{stockNum})
    </insert>
    
    <update id="editMachinStateISPickedByMachinId">
        UPDATE erp_machin_header
        <set>
            pick_state = '2',
        </set>
        WHERE
            id = #{machinId}
    </update>
    
</mapper>