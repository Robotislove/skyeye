<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.eve.dao.SysNoticeTypeDao">
	
	<select id="querySysNoticeTypeList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.type_name name,
			a.create_name createName,
			CONVERT(a.create_time, char) createTime,
			a.state,
			a.order_by orderBy,
			a.parent_id pId,
			false lay_is_open,
			(SELECT COUNT(*) FROM sys_notice b WHERE (b.second_type_id = a.id OR b.type_id = a.id) AND b.state != '0') allNum,
			(SELECT COUNT(*) FROM sys_notice b WHERE (b.second_type_id = a.id OR b.type_id = a.id) AND b.state = '2') upStateNum
		FROM
			sys_notice_type a
		WHERE  a.state != 0
			<if test="name != '' and name != null">
				AND a.type_name LIKE '%${name}%'
			</if>
			<if test="parentId != '' and parentId != null">
				AND a.parent_id = #{parentId}
			</if>
			ORDER BY a.order_by ASC
	</select>
	
	<select id="querySysNoticeTypeMationByName" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id
		FROM
			sys_notice_type a
		WHERE a.type_name = #{typeName}
		AND a.state != 0
	</select>
	
	<select id="querySysNoticeTypeMationByNameAndId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id
		FROM
			sys_notice_type a
		WHERE a.type_name = #{typeName}
		AND a.id != #{id}
		AND a.state != 0
	</select>
	
	<insert id="insertSysNoticeTypeMation" parameterType="java.util.Map">
	    INSERT into sys_notice_type 
	    (id, type_name, order_by, state, create_id, create_name, create_time, parent_id)
	    VALUES(#{id}, #{typeName}, #{orderBy}, #{state}, #{createId}, #{createName}, #{createTime}, #{parentId})
	</insert>
	
	<select id="querySysNoticeTypeBySimpleLevel" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			COUNT(*) simpleNum
		FROM
			sys_notice_type 
		WHERE
			parent_id = #{parentId}
	</select>
	
	<update id="deleteSysNoticeTypeById" parameterType="java.util.Map">
		UPDATE sys_notice_type
		<set>
			state = 0
		</set>
		WHERE id = #{id}
	</update>
	
	<update id="updateUpSysNoticeTypeById" parameterType="java.util.Map">
		UPDATE sys_notice_type
		<set>
			state = 2
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="querySysNoticeTypeStateById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.state
		FROM
			sys_notice_type a	
		WHERE 
			a.id = #{id}
	</select>
	
	<update id="updateDownSysNoticeTypeById" parameterType="java.util.Map">
		UPDATE sys_notice_type
		<set>
			state = 3
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="selectSysNoticeTypeById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.type_name typeName,
			b.type_name pName,
			CASE a.parent_id WHEN '0' THEN '一级类型' ELSE '二级类型' END pId
		FROM
			sys_notice_type a
			LEFT JOIN sys_notice_type b	ON a.parent_id = b.id
		WHERE 
			a.id = #{id}
	</select>
	
	<update id="editSysNoticeTypeMationById" parameterType="java.util.Map">
		UPDATE sys_notice_type
		<set>
			type_name = #{typeName}
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="querySysNoticeTypeUpMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.order_by thisOrderBy,
			b.id,
			b.order_by prevOrderBy
		FROM
			sys_notice_type a,
			sys_notice_type b
		WHERE
			a.id = #{id}
		AND a.parent_id = b.parent_id
		AND a.order_by > b.order_by
		AND b.state != '0'
		ORDER BY
			b.order_by DESC
		LIMIT 1
	</select>
	
	<update id="editSysNoticeTypeMationOrderNumUpById" parameterType="java.util.Map">
		UPDATE sys_notice_type
		<set>
			order_by = #{upOrderBy},
		</set>
		WHERE id = #{id}
	</update>

	<select id="querySysNoticeTypeDownMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.order_by thisOrderBy,
			b.id,
			b.order_by prevOrderBy
		FROM
			sys_notice_type a,
			sys_notice_type b
		WHERE
			a.id = #{id}
		AND a.parent_id = b.parent_id
		AND b.order_by > a.order_by
		AND b.state != 0
		ORDER BY
			b.order_by ASC
		LIMIT 1
	</select>
	
	<select id="querySysNoticeTypeUpStateList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.type_name name
		FROM
			sys_notice_type a
		WHERE 
			a.state = 2
			ORDER BY a.order_by ASC
	</select>
	
	<select id="queryFirstSysNoticeTypeUpStateList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.type_name name
		FROM
			sys_notice_type a
		WHERE 
			a.state = 2
			AND a.parent_id = '0'
			ORDER BY a.order_by ASC
	</select>
	
	<select id="queryAllFirstSysNoticeTypeStateList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.type_name name
		FROM
			sys_notice_type a
		WHERE 
			a.state != 0
			AND a.parent_id = '0'
			ORDER BY a.order_by ASC
	</select>
	
	<select id="querySecondSysNoticeTypeUpStateList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.type_name name
		FROM
			sys_notice_type a
		WHERE 
			a.state != 0
			AND a.parent_id = #{parentId}
			ORDER BY a.order_by ASC
	</select>
	
	<select id="querySysNoticeTypeById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			CASE a.parent_id WHEN '0' THEN '' ELSE a.parent_id END parentId
		FROM
			sys_notice_type a
		WHERE 
			a.id = #{id}
	</select>
	
</mapper>