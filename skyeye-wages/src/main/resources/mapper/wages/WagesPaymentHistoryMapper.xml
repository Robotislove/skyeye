<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.eve.dao.WagesPaymentHistoryDao">

    <select id="queryAllWagesPaymentHistoryList" resultType="java.util.Map">
        SELECT
            a.pay_month payMonth,
            a.wages_json wagesJson,
            CONVERT(a.act_wages, decimal(24, 2)) actWages,
            a.staff_id staffId,
            a.type,
            CONVERT (a.create_time, CHAR) createTime,
            CONCAT_WS('_', b.job_number, b.user_name) userName,
            p.company_name companyName,
            q.department_name departmentName,
            e.job_name jobName
        FROM
            wages_payment_history a,
            sys_eve_user_staff b
            LEFT JOIN company_mation p ON b.company_id = p.id
            LEFT JOIN company_department q ON b.department_id = q.id
            LEFT JOIN company_job e ON b.job_id = e.id
        WHERE a.staff_id = b.id
        AND a.state = #{state}
        <if test="jobNumber != null and jobNumber != ''">
            AND b.job_number LIKE '%${jobNumber}%'
        </if>
        <if test="userName != null and userName != ''">
            AND b.user_name LIKE '%${userName}%'
        </if>
        <if test="companyId != null and companyId != ''">
            AND b.company_id = #{companyId}
        </if>
        <if test="departmentId != null and departmentId != ''">
            AND b.department_id = #{departmentId}
        </if>
        <if test="jobId != null and jobId != ''">
            AND b.job_id = #{jobId}
        </if>
        <if test="payMonth != null and payMonth != ''">
            AND a.pay_month = #{payMonth}
        </if>
        ORDER BY a.create_time DESC
    </select>

    <select id="queryMyWagesPaymentHistoryList" resultType="java.util.Map">
        SELECT
            a.pay_month payMonth,
            a.wages_json wagesJson,
            CONVERT(a.act_wages, decimal(24, 2)) actWages,
            a.staff_id staffId,
            a.type,
            a.state,
            CONVERT (a.create_time, CHAR) createTime,
            CONCAT_WS('_', b.job_number, b.user_name) userName,
            p.company_name companyName,
            q.department_name departmentName,
            e.job_name jobName
        FROM
            wages_payment_history a,
            sys_eve_user_staff b
            LEFT JOIN company_mation p ON b.company_id = p.id
            LEFT JOIN company_department q ON b.department_id = q.id
            LEFT JOIN company_job e ON b.job_id = e.id
        WHERE a.staff_id = b.id
        AND a.staff_id = #{staffId}
        <if test="payMonth != null and payMonth != ''">
            AND a.pay_month = #{payMonth}
        </if>
        ORDER BY a.create_time DESC
    </select>

    <insert id="insertWagesPaymentHistoryMation" parameterType="java.util.Map">
        INSERT into wages_payment_history
        (staff_id, pay_month, wages_json, act_wages, create_time, type, state)
        VALUES
        (#{staffId}, #{payMonth}, #{wagesJson}, #{actWages}, #{createTime}, #{type}, #{state})
    </insert>

    <select id="queryWaitPaymentStaffHistory" resultType="java.util.Map">
        SELECT
            a.staff_id staffId,
            a.pay_month payMonth,
            a.act_wages actWages
        FROM
            wages_payment_history a
        WHERE a.state = 1
        AND a.pay_month = #{lastMonthDate}
        <if test="list != null and list.size > 0">
            AND a.staff_id NOT IN
            <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        LIMIT 1
    </select>

    <update id="editToPaymentByStaffAndPayMonth">
        UPDATE wages_payment_history
        <set>
            state = 2
        </set>
        WHERE staff_id = #{staffId}
        AND pay_month = #{payMonth}
    </update>

</mapper>