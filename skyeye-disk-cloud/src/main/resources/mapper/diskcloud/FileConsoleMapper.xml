<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.eve.dao.FileConsoleDao">
	
	<insert id="insertFileFolderByUserId" parameterType="java.util.Map">
		insert into file_catalog
			(id, catalog_name, parent_id, create_id, create_time)
		VALUES
			(#{id}, #{catalogName}, #{parentId}, #{createId}, #{createTime})
	</insert>
	
	<select id="queryFileFolderByUserIdAndParentId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.catalog_name `name`,
			#{parentId} pId,
			'../../assets/images/my-folder-icon.png' icon,
			1 isParent
		FROM
			file_catalog a
		WHERE a.parent_id = CONCAT(IFNULL((SELECT t.parent_id FROM file_catalog t WHERE t.id = #{parentId}), ''), #{parentId}, ',')
		<if test="folderType != '1'.toString()">
			AND a.create_id = #{userId}
		</if>
		AND a.id NOT IN (SELECT m.file_id FROM file_catelog_recycle_bin m WHERE m.file_type = '1' AND m.create_id = #{userId})
		AND a.state = '1'
		ORDER BY a.catalog_name ASC
	</select>
	
	<select id="queryFilesListByFolderId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			*
		FROM (
				SELECT
					a.id,
					a.catalog_name `name`,
					#{folderId} pId,
					'../../assets/images/folder-show.png' icon,
					1 isParent,
					'folder' fileType,
					if((SELECT COUNT(*) FROM file_catalog_share l WHERE l.file_id = a.id AND l.file_type = '1') > 0, 'block', 'none') isShow,
					1 orderBy,
					0 fileSize,
					a.create_id createId,
					k.user_name createName,
					CONVERT(a.create_time, char) createTime
				FROM
					file_catalog a
					LEFT JOIN sys_eve_user_staff k ON a.create_id = k.user_id
				WHERE
					a.parent_id = CONCAT(IFNULL((SELECT t.parent_id FROM file_catalog t WHERE t.id = #{folderId}), ''), #{folderId}, ',')
				<if test="folderType != '1'.toString()">
					AND a.create_id = #{userId}
				</if>
				AND a.id NOT IN (SELECT m.file_id FROM file_catelog_recycle_bin m WHERE m.file_type = '1' AND m.create_id = #{userId})
				AND a.state = '1'
				UNION ALL
					SELECT
						a.id,
						a.file_name `name`,
						#{folderId} pId,
						a.file_thumbnail icon,
						0 isParent,
						a.file_type fileType,
						if((SELECT COUNT(*) FROM file_catalog_share l WHERE l.file_id = a.id AND l.file_type = '2') > 0, 'block', 'none') isShow,
						2 orderBy,
						a.file_size fileSize,
						a.create_id createId,
						k.user_name createName,
						CONVERT(a.create_time, char) createTime
					FROM
						file_catelog_papers a
						LEFT JOIN sys_eve_user_staff k ON a.create_id = k.user_id
					WHERE
						a.parent_id = CONCAT(IFNULL((SELECT t.parent_id FROM file_catalog t WHERE t.id = #{folderId}), ''), #{folderId}, ',')
					<if test="folderType != '1'.toString()">
						AND a.create_id = #{userId}
					</if>
					AND a.id NOT IN (SELECT m.file_id FROM file_catelog_recycle_bin m WHERE m.file_type = '2' AND m.create_id = #{userId})
					AND a.state = '1'
			) k
	</select>
	
	<delete id="deleteFileFolderById">
		DELETE
		FROM
			file_catalog
		WHERE
			id = #{id}
	</delete>
	
	<update id="editFileFolderById" parameterType="java.util.Map">
		UPDATE file_catalog
		<set>
			<if test="catalogName != '' and catalogName != null">
				catalog_name = #{catalogName},
			</if>
		</set>
		WHERE id = #{id}
		AND create_id = #{userId}
	</update>
	
	<insert id="insertUploadFileByUserId" parameterType="java.util.Map">
		insert into file_catelog_papers
			(id, file_name, file_thumbnail, file_address, file_type, file_size, file_size_type, parent_id, chunk, chunk_size, file_md5, create_id, create_time, update_time)
		VALUES
			(#{id}, #{name}, #{fileThumbnail}, #{fileAddress}, #{fileType}, #{size}, #{fileSizeType}, #{folderId}, #{chunk}, #{chunkSize}, #{md5}, #{createId}, #{createTime}, #{createTime})
	</insert>
	
	<update id="editFilePaperNameById" parameterType="java.util.Map">
		UPDATE file_catelog_papers
		<set>
			<if test="catalogName != '' and catalogName != null">
				file_name = #{catalogName},
			</if>
		</set>
		WHERE id = #{id}
		AND create_id = #{userId}
	</update>
	
	<delete id="deleteFilePaperById">
		DELETE
		FROM
			file_catelog_papers
		WHERE
			id = #{id}
	</delete>
	
	<select id="queryFilePaperPathById" resultType="java.util.Map">
		SELECT
			a.id,
			a.file_address fileAddress,
			a.file_thumbnail fileThumbnail,
			a.file_type fileType
		FROM
			file_catelog_papers a
		WHERE
			a.id = #{id}
	</select>
	
	<select id="queryUploadFileChunksByChunkMd5" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.file_address fileAddress
		FROM
			file_catelog_papers a
		WHERE a.file_md5 = #{md5}
		AND a.chunk = #{chunk}
	</select>
	
	<delete id="deleteUploadFileChunksByChunkMd5" parameterType="java.util.Map">
		DELETE
		FROM
			file_catelog_papers
		WHERE
			file_md5 = #{md5}
		AND chunk = #{chunk}
	</delete>
	
	<select id="queryUploadFileChunksByMd5" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.file_address fileAddress
		FROM
			file_catelog_papers a
		WHERE a.file_md5 = #{md5}
		ORDER BY a.chunk ASC
	</select>
	
	<delete id="deleteUploadFileChunksByMd5" parameterType="java.util.Map">
		DELETE
		FROM
			file_catelog_papers
		WHERE
			file_md5 = #{md5}
	</delete>
	
	<select id="queryUploadFilePathById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.file_address fileAddress,
			a.file_name fileName,
			a.file_thumbnail fileThumbnail,
			a.file_type fileType
		FROM
			file_catelog_papers a
		WHERE
			a.id = #{id}
	</select>
	
	<select id="queryFolderParentByFolderId" resultType="java.util.Map">
		SELECT
			a.parent_id parentId
		FROM
			file_catalog a
		WHERE a.id = #{folderId}
	</select>
	
	<select id="queryFilesByFolderId" resultType="java.util.Map">
		SELECT
			a.file_address fileAddress,
			a.file_thumbnail fileThumbnail,
			a.file_type fileType
		FROM
			file_catelog_papers a
		WHERE INSTR(CONCAT(',', a.parent_id, ','), CONCAT(',', #{id}, ','))
	</select>
	
	<delete id="deleteFilesByFolderId">
		DELETE
		FROM
			file_catelog_papers
		WHERE
			INSTR(CONCAT(',', parent_id, ','), CONCAT(',', #{id}, ','))
	</delete>
	
	<delete id="deleteFolderChildByFolderId">
		DELETE
		FROM
			file_catalog
		WHERE
			INSTR(CONCAT(',', parent_id, ','), CONCAT(',', #{id}, ','))
	</delete>
	
	<select id="queryUploadFilePathByKey" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.file_address fileAddress
		FROM
			file_catelog_papers a
		WHERE a.id = #{key}
	</select>
	
	<select id="queryAllFileSizeByUserId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			SUM(a.file_size) fileSize
		FROM
			file_catelog_papers a
		WHERE
			a.create_id = #{userId}
		AND a.parent_id NOT IN (SELECT b.parent_id FROM file_catelog_papers b WHERE b.create_id = #{userId} AND INSTR(CONCAT(',', b.parent_id, ','), CONCAT(',', '3', ',')))
		GROUP BY
			a.create_id
	</select>
	
	<select id="queryFileCatalogByUserIdAndId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.catalog_name fileName,
			1 fileType
		FROM
			file_catalog a
		WHERE a.id = #{id}
		AND a.create_id = #{userId}
		UNION ALL
		SELECT
			b.id,
			b.file_name fileName,
			2 fileType
		FROM
			file_catelog_papers b
		WHERE b.id = #{id}
		AND b.create_id = #{userId}
		LIMIT 1
	</select>
	
	<insert id="insertFileCatalogToRecycleById" parameterType="java.util.Map">
		insert into file_catelog_recycle_bin
			(id, file_id, file_type, recycle_name, create_id, create_time)
		VALUES
			(#{id}, #{fileId}, #{fileType}, #{fileName}, #{createId}, #{createTime})
	</insert>
	
	<select id="queryFileRecycleBinByUserId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.recycle_name recycleName,
			CASE a.file_type WHEN 1 THEN '文件夹' WHEN 2 THEN '文件' ELSE '' END fileType,
			CONVERT(a.create_time, char) createTime
		FROM
			file_catelog_recycle_bin a
		WHERE a.create_id = #{userId}
		ORDER BY a.create_time DESC
	</select>
	
	<select id="queryFileRecycleBinById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.file_type fileType,
			a.file_id fileId
		FROM
			file_catelog_recycle_bin a
		WHERE a.create_id = #{userId}
		AND a.id = #{id}
	</select>
	
	<delete id="deleteFileRecycleBinById" parameterType="java.util.Map">
		DELETE
		FROM
			file_catelog_recycle_bin
		WHERE
			id = #{id}
	</delete>
	
	<update id="updateFileFolderRecycleBinById" parameterType="java.util.Map">
		UPDATE file_catalog
		<set>
			parent_id = '2,',
		</set>
		WHERE id = #{fileId}
	</update>
	
	<update id="updateFileRecycleBinById" parameterType="java.util.Map">
		UPDATE file_catelog_papers
		<set>
			parent_id = '2,',
		</set>
		WHERE id = #{fileId}
	</update>
	
	<select id="queryThisFileCreaterByFileId" resultType="java.util.Map">
		SELECT
			*
		FROM
			(SELECT
				a.create_id createId
			FROM
				file_catalog a
			WHERE a.id = #{id}
			UNION ALL
			SELECT 
				b.create_id createId
			FROM
				file_catelog_papers b
			WHERE b.id = #{id}) k
		LIMIT 1
	</select>
	
	<update id="updateFileStateIsDeleteById" parameterType="java.util.Map">
		UPDATE file_catelog_papers
		<set>
			state = '2',
			state_is_del_time = #{delTime},
			state_is_del_user = #{userId},
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryFileMationByIdAndUserId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			*
		FROM
			(SELECT
				a.id,
				a.catalog_name fileName,
				'1' fileType
			FROM
				file_catalog a
			WHERE a.id = #{id}
			UNION ALL
			SELECT 
				b.id,
				b.file_name fileName,
				'2' fileType
			FROM
				file_catelog_papers b
			WHERE b.id = #{id}) k
		LIMIT 1
	</select>
	
	<insert id="insertFileToShareById" parameterType="java.util.Map">
		insert into file_catalog_share
			(id, file_id, file_type, share_name, share_code, share_url, share_type, share_password, state, create_id, create_time)
		VALUES
			(#{id}, #{fileId}, #{fileType}, #{fileName}, #{shareCode}, #{shareUrl}, #{shareType}, #{sharePassword}, #{state}, #{createId}, #{createTime})
	</insert>
	
	<select id="queryShareFileListByUserId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.share_name shareName,
			CASE a.file_type WHEN 1 THEN '文件夹' WHEN 2 THEN '文件' ELSE '文件' END fileType,
			a.share_url shareUrl,
			a.share_password sharePassword,
			CASE a.state WHEN 1 THEN '正常' WHEN 2 THEN '失效' ELSE '失效' END stateName,
			a.share_type shareTypeNum,
			CASE a.share_type WHEN 1 THEN '公开分享' WHEN 2 THEN '私密分享' ELSE '公开分享' END shareType,
			#{reqBasePath} reqBasePath,
			DATE_FORMAT(a.create_time, '%Y-%m-%d %H:%i') createTime
		FROM
			file_catalog_share a
		WHERE create_id = #{userId}
		ORDER BY a.create_time DESC
	</select>
	
	<delete id="deleteShareFileById" parameterType="java.util.Map">
		DELETE
		FROM
			file_catalog_share
		WHERE
			id = #{id}
		AND create_id = #{userId}
	</delete>
	
	<select id="queryShareFileMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			b.user_photo userPhoto,
			b.user_name userName,
			a.share_type shareType
		FROM
			file_catalog_share a,
			sys_eve_user_staff b
		WHERE a.id = #{id}
		AND a.create_id = b.user_id
	</select>
	
	<select id="queryShareFileMationCheckById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.share_password sharePassword
		FROM
			file_catalog_share a
		WHERE a.id = #{id}
	</select>
	
	<select id="queryShareFileBaseMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.share_name shareName,
			a.file_type fileType,
			a.file_id fileId,
			DATE_FORMAT(a.create_time, '%Y-%m-%d %H:%i') createTime
		FROM
			file_catalog_share a
		WHERE a.id = #{id}
	</select>
	
	<select id="queryShareFileFirstListByParentId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			b.id,
			b.catalog_name fileName,
			0 fileSize,
			'folder' fileType,
			'../../assets/images/share-folder.png' iconPath,
			DATE_FORMAT(a.create_time, '%Y-%m-%d %H:%i') createTime
		FROM
			file_catalog_share a,
			file_catalog b
		WHERE a.id = #{shareId}
		AND a.file_id = b.id
		AND a.file_type = '1'
		UNION ALL
		SELECT
			b.id,
			b.file_name fileName,
			b.file_size fileSize,
			b.file_type fileType,
			'../../assets/images/share-file.png' iconPath,
			DATE_FORMAT(a.create_time, '%Y-%m-%d %H:%i') createTime
		FROM
			file_catalog_share a,
			file_catelog_papers b 
		WHERE a.id = #{shareId}
		AND a.file_id = b.id
		AND a.file_type = '2'
	</select>
	
	<select id="queryShareFileListByParentId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			*
		FROM (
				SELECT
					a.id,
					a.catalog_name fileName,
					'folder' fileType,
					0 fileSize,
					'../../assets/images/share-folder.png' iconPath,
					CONVERT(a.create_time, char) createTime
				FROM
					file_catalog a
				WHERE
					a.parent_id = CONCAT(IFNULL((SELECT t.parent_id FROM file_catalog t WHERE t.id = #{folderId}), ''), #{folderId}, ',')
				AND a.id NOT IN (SELECT m.file_id FROM file_catelog_recycle_bin m WHERE m.file_type = '1')
				AND a.state = '1'
				UNION ALL
					SELECT
						a.id,
						a.file_name fileName,
						a.file_type fileType,
						a.file_size fileSize,
						'../../assets/images/share-file.png' iconPath,
						CONVERT(a.create_time, char) createTime
					FROM
						file_catelog_papers a
					WHERE
						a.parent_id = CONCAT(IFNULL((SELECT t.parent_id FROM file_catalog t WHERE t.id = #{folderId}), ''), #{folderId}, ',')
					AND a.id NOT IN (SELECT m.file_id FROM file_catelog_recycle_bin m WHERE m.file_type = '2')
					AND a.state = '1'
			) k
	</select>
	
	<select id="queryShareFileFolderListByList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.catalog_name `name`,
			a.parent_id parentId,
			'folder' fileType
		FROM
			file_catalog a
		WHERE a.state = '1'
		AND (
		<foreach collection="list" item="item" index="index" >  
			INSTR(CONCAT(',', a.parent_id, ','), CONCAT(',', #{item.id}, ',')) OR a.id = #{item.id} OR
		</foreach>
		 1=0)
		ORDER BY LENGTH(a.parent_id) ASC
	</select>
	
	<select id="queryShareFileListByList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.file_name fileName,
			a.file_thumbnail fileThumbnail,
			a.file_address fileAddress,
			a.file_type fileType,
			a.file_size fileSize,
			a.file_size_type fileSizeType,
			a.chunk,
			a.chunk_size chunkSize,
			a.parent_id parentId
		FROM
			file_catelog_papers a
		WHERE a.state = '1'
		AND (
		<foreach collection="list" item="item" index="index" >  
			a.parent_id = CONCAT(#{item.parentId}, #{item.id}, ',') OR
		</foreach>
		 1=0)
		ORDER BY LENGTH(a.parent_id) ASC
	</select>
	
	<insert id="insertShareFileFolderListByList" parameterType="java.util.Map">
	     insert into file_catalog
	     (id, catalog_name, parent_id, state, source_id, create_id, create_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.newId}, #{item.name}, #{item.newParentId}, #{item.state}, #{item.id}, #{item.createId}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<insert id="insertShareFileListByList" parameterType="java.util.Map">
	     insert into file_catelog_papers
	     (id, file_name, file_thumbnail, file_address, file_type, file_size, file_size_type, chunk, chunk_size, parent_id, state, source_id, create_id, create_time, update_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.newId}, #{item.fileName}, #{item.fileThumbnail}, #{item.fileAddress}, #{item.fileType}, #{item.fileSize}, #{item.fileSizeType}, #{item.chunk}, #{item.chunkSize}, 
			#{item.newParentId}, #{item.state}, #{item.id}, #{item.createId}, #{item.createTime}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<select id="queryShareFileListByFileList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.file_name fileName,
			a.file_thumbnail fileThumbnail,
			a.file_address fileAddress,
			a.file_type fileType,
			a.file_size fileSize,
			a.file_size_type fileSizeType,
			a.chunk,
			a.chunk_size chunkSize,
			a.parent_id parentId
		FROM
			file_catelog_papers a
		WHERE a.state = '1'
		AND (
		<foreach collection="list" item="item" index="index" >  
			a.id = #{item.id} OR
		</foreach>
		 1=0)
		ORDER BY LENGTH(a.parent_id) ASC
	</select>
	
	<select id="quertWinFileOrFolderParentById" resultType="java.util.Map">
		SELECT
			a.parent_id parentId
		FROM
			file_catalog a
		WHERE a.id = #{id}
			UNION
		SELECT
			a.parent_id parentId
		FROM
			file_catelog_papers a
		WHERE a.id = #{id}
	</select>
	
	<select id="queryFileToShowById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.file_address fileAddress,
			a.file_type fileType
		FROM
			file_catelog_papers a
		WHERE a.id = #{id}
	</select>
	
	<select id="queryFileMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			* 
		FROM 
		(SELECT
			a.id,
			'文件夹' fileType,
			a.catalog_name fileName,
			b.user_name createUserName,
			0 fileSize,
			DATE_FORMAT(a.create_time, '%Y-%m-%d %H:%i') createTime
		FROM
			file_catalog a
			LEFT JOIN sys_eve_user_staff b ON a.create_id = b.user_id
		WHERE
			a.id = #{id}
		UNION ALL
		SELECT
			a.id,
			a.file_type fileType,
			a.file_name fileName,
			b.user_name createUserName,
			a.file_size fileSize,
			DATE_FORMAT(a.create_time, '%Y-%m-%d %H:%i') createTime
		FROM
			file_catelog_papers a
			LEFT JOIN sys_eve_user_staff b ON a.create_id = b.user_id
		WHERE 
			a.id = #{id}) a
		LIMIT 1
	</select>
	
	<select id="queryToPackageFileFolderListByList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.catalog_name fileName,
			'' fileAddress,
			'folder' fileType,
			a.parent_id parentId
		FROM
			file_catalog a
		WHERE a.state = '1'
		AND (
		<foreach collection="list" item="item" index="index" >  
			INSTR(CONCAT(',', a.parent_id, ','), CONCAT(',', #{item.id}, ',')) OR a.id = #{item.id} OR
		</foreach>
		 1=0)
		ORDER BY LENGTH(a.parent_id) ASC
	</select>
	
	<select id="queryToPackageFileListByList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.file_name fileName,
			a.file_address fileAddress,
			a.file_type fileType,
			a.parent_id parentId
		FROM
			file_catelog_papers a
		WHERE a.state = '1'
		AND (
		<foreach collection="list" item="item" index="index" >  
			a.parent_id = CONCAT(#{item.parentId}, #{item.id}, ',') OR
		</foreach>
		 1=0)
		ORDER BY LENGTH(a.parent_id) ASC
	</select>
	
	<select id="queryToPackageFileListByFileList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.file_name fileName,
			a.file_address fileAddress,
			a.file_type fileType,
			a.parent_id parentId
		FROM
			file_catelog_papers a
		WHERE a.state = '1'
		AND (
		<foreach collection="list" item="item" index="index" >  
			a.id = #{item.id} OR
		</foreach>
		 1=0)
		ORDER BY LENGTH(a.parent_id) ASC
	</select>
	
	<select id="queryFilePackageMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.file_name fileName,
			a.file_address fileAddress,
			a.file_type fileType,
			a.parent_id parentId
		FROM
			file_catelog_papers a
		WHERE a.id = #{id}
	</select>
	
	<insert id="insertFolderByPackageAndUserId" parameterType="java.util.Map">
	     insert into file_catalog
	     (id, catalog_name, parent_id, state, create_id, create_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.newId}, #{item.realName}, #{item.newParentId}, #{item.state}, #{item.createId}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<insert id="insertFileByPackageAndUserId" parameterType="java.util.Map">
	     insert into file_catelog_papers
	     (id, file_name, file_thumbnail, file_address, file_type, file_size, file_size_type, chunk, chunk_size, parent_id, state, create_id, create_time, update_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.newId}, #{item.realName}, #{item.fileThumbnail}, #{item.fileAddress}, #{item.fileExtName}, #{item.size}, #{item.fileSizeType}, #{item.chunk}, #{item.chunkSize}, 
			#{item.newParentId}, #{item.state}, #{item.createId}, #{item.createTime}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<delete id="deleteShareFileFolderListByList" parameterType="java.util.Map">
		DELETE
		FROM
			file_catalog
		WHERE
			(
			<foreach collection="list" item="item" index="index" >  
				id = #{item.id} OR
			</foreach>
		 1 = 0)
	</delete>
	
	<delete id="deleteShareFileListByList" parameterType="java.util.Map">
		DELETE
		FROM
			file_catelog_papers
		WHERE
			(
			<foreach collection="list" item="item" index="index" >  
				id = #{item.id} OR
			</foreach>
		 1 = 0)
	</delete>
	
	<delete id="deleteShareFileListByFileList" parameterType="java.util.Map">
		DELETE
		FROM
			file_catelog_papers
		WHERE
			(
			<foreach collection="list" item="item" index="index" >  
				id = #{item.id} OR
			</foreach>
		 1 = 0)
	</delete>
	
	<update id="editFileUpdateTimeByKey" parameterType="java.util.Map">
        UPDATE file_catelog_papers
        <set>
            update_time = #{updateTime}
        </set>
        WHERE id = #{key}
    </update>
	
    <select id="queryOfficeUpdateTimeToKey" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            a.update_time updateTime
        FROM
            file_catelog_papers a
        WHERE a.id = #{id}
    </select>
    
    <select id="queryThisFolderParentIdByRowId" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            a.parent_id parentId
        FROM
            file_catalog a
        WHERE
            a.id = #{id}
    </select>
    
    <select id="queryAllNumFile" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			IFNULL(COUNT(a.id), 0) fileNum,
			IFNULL(SUM(a.file_size), 0) fileSize
		FROM
			file_catelog_papers a
		WHERE
			a.state = '1'
    </select>
    
    <select id="queryAllNumFileToday" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			IFNULL(COUNT(a.id), 0) fileNum,
			IFNULL(SUM(a.file_size), 0) fileSize
		FROM
			file_catelog_papers a
		WHERE
			a.state = '1'
		AND to_days(a.create_time) = to_days(now())
    </select>
    
    <select id="queryAllNumFileThisWeek" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			IFNULL(COUNT(a.id), 0) fileNum,
			IFNULL(SUM(a.file_size), 0) fileSize
		FROM
			file_catelog_papers a
		WHERE
			a.state = '1'
		AND YEARWEEK(date_format(a.create_time, '%Y-%m-%d')) = YEARWEEK(now())
    </select>
    
    <select id="queryFileTypeNum" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			CASE WHEN a.file_type IN("png", "jpg", "xbm", "bmp", "webp", "jpeg", "svgz", "git", "ico", "tiff", "svg", "jiff", "pjpeg", "pjp", "tif") THEN '图片'
					WHEN a.file_type IN("docx", "doc", "xls", "xlsx", "ppt", "pptx", "wps", "et", "dps", "csv", "pdf") THEN '文档'
					WHEN a.file_type IN("mp4", "rm", "rmvb", "wmv", "avi", "3gp", "mkv") THEN '视频'
					WHEN a.file_type IN("zip", "rar") THEN '压缩包'
					WHEN a.file_type IN("epub") THEN '电子书'
					WHEN a.file_type IN("txt", "sql", "java", "css", "html", "htm", "json", "js", "tpl") THEN '简易文档'
					ELSE '其他' END AS `name`,
			COUNT(a.id) `value`
		FROM
			file_catelog_papers a
		WHERE
			a.state = '1'
		GROUP BY `name`
    </select>
    
    <select id="queryFileStorageNum" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			CASE WHEN a.file_type IN("png", "jpg", "xbm", "bmp", "webp", "jpeg", "svgz", "git", "ico", "tiff", "svg", "jiff", "pjpeg", "pjp", "tif") THEN '图片'
					WHEN a.file_type IN("docx", "doc", "xls", "xlsx", "ppt", "pptx", "wps", "et", "dps", "csv", "pdf") THEN '文档'
					WHEN a.file_type IN("mp4", "rm", "rmvb", "wmv", "avi", "3gp", "mkv") THEN '视频'
					WHEN a.file_type IN("zip", "rar") THEN '压缩包'
					WHEN a.file_type IN("epub") THEN '电子书'
					WHEN a.file_type IN("txt", "sql", "java", "css", "html", "htm", "json", "js", "tpl") THEN '简易文档'
					ELSE '其他' END AS typeName,
			SUM(a.file_size) fileSize
		FROM
			file_catelog_papers a
		WHERE
			a.state = '1'
		GROUP BY typeName
		ORDER BY fileSize DESC
		LIMIT 3
    </select>
    
    <select id="queryNewFileNum" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			IFNULL(COUNT(b.id), 0) fileNum,
			a.monthName
		FROM
			(
		    SELECT 1 AS month, '一月' monthName
				UNION SELECT 2 AS month, '二月' monthName
				UNION SELECT 3 AS month, '三月' monthName
				UNION SELECT 4 AS month, '四月' monthName
				UNION SELECT 5 AS month, '五月' monthName
				UNION SELECT 6 AS month, '六月' monthName
				UNION SELECT 7 AS month, '七月' monthName
				UNION SELECT 8 AS month, '八月' monthName
				UNION SELECT 9 AS month, '九月' monthName
				UNION SELECT 10 AS month, '十月' monthName
				UNION SELECT 11 AS month, '十一月' monthName
				UNION SELECT 12 AS month, '十二月' monthName
			) a
			LEFT JOIN file_catelog_papers b ON b.state = '1' AND MONTH(b.create_time) = a.`month` AND DATE_FORMAT(NOW(), '%Y') = YEAR(b.create_time)
		GROUP BY a.`month` ORDER BY a.`month`
    </select>
    
    <select id="queryFileTypeNumSevenDay" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			CASE WHEN b.file_type IN("png", "jpg", "xbm", "bmp", "webp", "jpeg", "svgz", "git", "ico", "tiff", "svg", "jiff", "pjpeg", "pjp", "tif") THEN '图片'
					WHEN b.file_type IN("docx", "doc", "xls", "xlsx", "ppt", "pptx", "wps", "et", "dps", "csv", "pdf") THEN '文档'
					WHEN b.file_type IN("mp4", "rm", "rmvb", "wmv", "avi", "3gp", "mkv") THEN '视频'
					WHEN b.file_type IN("zip", "rar") THEN '压缩包'
					WHEN b.file_type IN("epub") THEN '电子书'
					WHEN b.file_type IN("txt", "sql", "java", "css", "html", "htm", "json", "js", "tpl") THEN '简易文档'
					ELSE '其他' END AS typeName,
			IFNULL(COUNT(b.id), 0) fileNum,
			DATE_FORMAT(a.click_date, '%Y-%m-%d') clickDate
		FROM
			(
		    SELECT curdate() as click_date
		    union all
		    SELECT date_sub(curdate(), interval 1 day) as click_date
		    union all
		    SELECT date_sub(curdate(), interval 2 day) as click_date
		    union all
		    SELECT date_sub(curdate(), interval 3 day) as click_date
		    union all
		    SELECT date_sub(curdate(), interval 4 day) as click_date
		    union all
		    SELECT date_sub(curdate(), interval 5 day) as click_date
		    union all
		    SELECT date_sub(curdate(), interval 6 day) as click_date
			) a
			LEFT JOIN file_catelog_papers b ON b.state = '1' AND to_days(b.create_time) = to_days(a.click_date)
		GROUP BY a.click_date, typeName
    </select>
	
</mapper>